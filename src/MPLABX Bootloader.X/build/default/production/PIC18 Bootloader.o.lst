MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; Copyright (c) 2002-2011,  Microchip Technology Inc.
                      00002 ;
                      00003 ; Microchip licenses this software to you solely for use with Microchip
                      00004 ; products.  The software is owned by Microchip and its licensors, and
                      00005 ; is protected under applicable copyright laws.  All rights reserved.
                      00006 ;
                      00007 ; SOFTWARE IS PROVIDED "AS IS."  MICROCHIP EXPRESSLY DISCLAIMS ANY
                      00008 ; WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT
                      00009 ; NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
                      00010 ; FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL
                      00011 ; MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
                      00012 ; CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, HARM TO YOUR
                      00013 ; EQUIPMENT, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY
                      00014 ; OR SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED
                      00015 ; TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION,
                      00016 ; OR OTHER SIMILAR COSTS.
                      00017 ;
                      00018 ; To the fullest extent allowed by law, Microchip and its licensors
                      00019 ; liability shall not exceed the amount of fees, if any, that you
                      00020 ; have paid directly to Microchip to use this software.
                      00021 ;
                      00022 ; MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE
                      00023 ; OF THESE TERMS.
                      00024 ;
                      00025 ; Author        Date        Comment
                      00026 ; ************************************************************************
                      00027 ; E. Schlunder  07/20/2010  Software Boot Block Write Protect code 
                      00028 ;                           improved. 96KB memory size devices should
                      00029 ;                           work now.
                      00030 ; E. Schlunder  02/26/2010  Changed order of start up code so that PLLEN
                      00031 ;                           is enabled before we wait for RXD IDLE state. 
                      00032 ;                           This improves connection time/reliablity on 
                      00033 ;                           J devices.
                      00034 ; E. Schlunder  08/28/2009  Software Boot Block Write Protect option.
                      00035 ; E. Schlunder  07/09/2009  Brought back support for bootloader at 
                      00036 ;                           address 0 for hardware boot block write 
                      00037 ;                           protection on certain devices.
                      00038 ; E. Schlunder  05/07/2009  Replaced the simple checksum with a
                      00039 ;                           16-bit CCIT CRC checksum. 
                      00040 ;                           Added ReadFlashCrc command for quick verify.
                      00041 ; E. Schlunder  05/02/2009  Improved autobaud code to handle 1Mbps
                      00042 ;                           and BRG16/BRGH.
                      00043 ; E. Schlunder  05/01/2009  Added support for DEVICES.INC generated
                      00044 ;                           from Device Database tool. 
                      00045 ; E. Schlunder  04/29/2009  Added support for locating the bootloader
                      00046 ;                           at the end of program memory instead of
                      00047 ;                           the beginning. This will eventually let us
                      00048 ;                           use normal application firmware code without
                      00049 ;                           linker script modifications.
                      00050 ; E. Schlunder  04/26/2009  Optimized Config Write routine to avoid 
                      00051 ;                           re-writing values matching existing config
                      00052 ;                           data.
                      00053 ; E. Schlunder  04/24/2009  Optimized EEPROM Write routine a little bit.
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;                           Optimized FLASH Read routine to stream data
                      00055 ;                           directly from FLASH instead of using RAM
                      00056 ;                           buffer.
                      00057 ;                           Added option for faster STX acknowledgements.
                      00058 ; E. Schlunder  04/17/2009  Added code to enter bootloader mode if
                      00059 ;                           a serial break condition is detected on
                      00060 ;                           RXD as we come out of reset. This will
                      00061 ;                           make it possible to re-enter the bootloader
                      00062 ;                           even if the application firmware is missing
                      00063 ;                           code to re-enter bootloader mode.
                      00064 ;                           This also simplies the bootloader, as
                      00065 ;                           we do not need a boot flag any more.
                      00066 ; E. Schlunder  04/15/2009  Removed EOF command 8, new PC software
                      00067 ;                           does 64 byte block aligned writes at all
                      00068 ;                           times on J device, so there is no need for
                      00069 ;                           this command going forward.
                      00070 ; E. Schlunder  04/14/2009  Added a BootloadMode vector back at the 
                      00071 ;                           beginning of program memory so that user
                      00072 ;                           applications can jump back into the boot 
                      00073 ;                           loader without having to erase the boot flag.
                      00074 ; E. Schlunder  04/08/2009  Now initializes FSR2 to 0 so that the code 
                      00075 ;                           can operate under Extended Instruction Set
                      00076 ;                           mode if necessary.
                      00077 ; E. Schlunder  04/01/2009  Fixed bug in J_FLASH erase address increment.
                      00078 ;                           Added support for enabling PLL.
                      00079 ;                           Added support for inverted UART signaling.
                      00080 ;                           Added support for fixed (non-autobaud) 
                      00081 ;                           operation, helps with debugging code under ICD.
                      00082 ; E. Schlunder  03/25/2009  No longer attempts to use EEADRH on PIC18F4321.
                      00083 ;
                      00084 ; UART Bootloader for PIC18F by Ross Fosler 
                      00085 ; 09/01/2006  Modified to support PIC18xxJxx & 160k PIC18Fxxx Flash Devices
                      00086 ; 03/01/2002 ... First full implementation
                      00087 ; 03/07/2002 Changed entry method to use last byte of EEDATA.
                      00088 ;            Also removed all possible infinite loops w/ clrwdt.
                      00089 ; 03/07/2002 Added code for direct boot entry. I.E. boot vector.
                      00090 ; 03/09/2002 Changed the general packet format, removed the LEN field.
                      00091 ; 03/09/2002 Modified the erase command to do multiple row erase.
                      00092 ; 03/12/2002 Fixed write problem to CONFIG area. Write was offset by a byte.
                      00093 ; 03/15/2002 Added work around for 18F8720 tblwt*+ problem.
                      00094 ; 03/20/2002 Modified receive & parse engine to vector to autobaud on a checksum 
                      00095 ;            error since a chechsum error could likely be a communications problem.
                      00096 ; 03/22/2002 Removed clrwdt from the startup. This instruction affects the TO and 
                      00097 ;            PD flags. Removing this instruction should have no affect on code 
                      00098 ;       operation since the wdt is cleared on a reset and boot entry is always
                      00099 ;       on a reset.
                      00100 ; 03/22/2002    Modified the protocol to incorporate the autobaud as part of the 
                      00101 ;       first received <STX>. Doing this improves robustness by allowing
                      00102 ;       re-sync under any condition. Previously it was possible to enter a 
                      00103 ;       state where only a hard reset would allow re-syncing.
                      00104 ; 03/27/2002    Removed the boot vector and related code. This could lead to customer
                      00105 ;       issues. There is a very minute probability that errent code execution
                      00106 ;       could jump into the boot area and cause artificial boot entry.
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; *****************************************************************************
                      00108 #include "p18cxxx.inc"
                      00001         LIST
                      00002 ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F6620 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01710         LIST
                      00103   ENDIF
                      00104   IFDEF __18F6720
                      00105      INCLUDE <P18F6720.INC>
                      00106   ENDIF
                      00107   IFDEF __18F8620
                      00108      INCLUDE <P18F8620.INC>
                      00109   ENDIF
                      00110   IFDEF __18F8720
                      00111      INCLUDE <P18F8720.INC>
                      00112   ENDIF
                      00109 #include "devices.inc"
                      00001 #ifdef __18F13K22
                      00002      #define DEVICEID                .634
                      00003      #define WRITE_FLASH_BLOCKSIZE   .8
                      00004      #define ERASE_FLASH_BLOCKSIZE   .64
                      00005      #define END_FLASH               0x2000
                      00006      #define END_GPR                 0x100
                      00007 #endif
                      00008 
                      00009 #ifdef __18F13K50
                      00010      #define DEVICEID                .570
                      00011      #define WRITE_FLASH_BLOCKSIZE   .8
                      00012      #define ERASE_FLASH_BLOCKSIZE   .64
                      00013      #define END_FLASH               0x2000
                      00014      #define END_GPR                 0x300
                      00015 #endif
                      00016 
                      00017 #ifdef __18F14K22
                      00018      #define DEVICEID                .633
                      00019      #define WRITE_FLASH_BLOCKSIZE   .16
                      00020      #define ERASE_FLASH_BLOCKSIZE   .64
                      00021      #define END_FLASH               0x4000
                      00022      #define END_GPR                 0x200
                      00023 #endif
                      00024 
                      00025 #ifdef __18F14K50
                      00026      #define DEVICEID                .571
                      00027      #define WRITE_FLASH_BLOCKSIZE   .16
                      00028      #define ERASE_FLASH_BLOCKSIZE   .64
                      00029      #define END_FLASH               0x4000
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00030      #define END_GPR                 0x300
                      00031 #endif
                      00032 
                      00033 #ifdef __18F23K20
                      00034      #define DEVICEID                .263
                      00035      #define WRITE_FLASH_BLOCKSIZE   .8
                      00036      #define ERASE_FLASH_BLOCKSIZE   .64
                      00037      #define END_FLASH               0x2000
                      00038      #define END_GPR                 0x200
                      00039 #endif
                      00040 
                      00041 #ifdef __18F23K22
                      00042      #define DEVICEID                .698
                      00043      #define WRITE_FLASH_BLOCKSIZE   .64
                      00044      #define ERASE_FLASH_BLOCKSIZE   .64
                      00045      #define END_FLASH               0x2000
                      00046      #define END_GPR                 0x200
                      00047 #endif
                      00048 
                      00049 #ifdef __18F24J10
                      00050      #define CONFIG_AS_FLASH
                      00051      #define DEVICEID                .232
                      00052      #define WRITE_FLASH_BLOCKSIZE   .64
                      00053      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00054      #define END_FLASH               0x4000
                      00055      #define END_GPR                 0x400
                      00056 #endif
                      00057 
                      00058 #ifdef __18F24J11
                      00059      #define CONFIG_AS_FLASH
                      00060      #define DEVICEID                .620
                      00061      #define WRITE_FLASH_BLOCKSIZE   .64
                      00062      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00063      #define END_FLASH               0x4000
                      00064      #define END_GPR                 0xEC0
                      00065 #endif
                      00066 
                      00067 #ifdef __18F24J50
                      00068      #define CONFIG_AS_FLASH
                      00069      #define DEVICEID                .608
                      00070      #define WRITE_FLASH_BLOCKSIZE   .64
                      00071      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00072      #define END_FLASH               0x4000
                      00073      #define END_GPR                 0xEC0
                      00074 #endif
                      00075 
                      00076 #ifdef __18F24K20
                      00077      #define DEVICEID                .261
                      00078      #define WRITE_FLASH_BLOCKSIZE   .32
                      00079      #define ERASE_FLASH_BLOCKSIZE   .64
                      00080      #define END_FLASH               0x4000
                      00081      #define END_GPR                 0x300
                      00082 #endif
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083 
                      00084 #ifdef __18F24K22
                      00085      #define DEVICEID                .690
                      00086      #define WRITE_FLASH_BLOCKSIZE   .64
                      00087      #define ERASE_FLASH_BLOCKSIZE   .64
                      00088      #define END_FLASH               0x4000
                      00089      #define END_GPR                 0x300
                      00090 #endif
                      00091 
                      00092 #ifdef __18F25J10
                      00093      #define CONFIG_AS_FLASH
                      00094      #define DEVICEID                .224
                      00095      #define WRITE_FLASH_BLOCKSIZE   .64
                      00096      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00097      #define END_FLASH               0x8000
                      00098      #define END_GPR                 0x400
                      00099 #endif
                      00100 
                      00101 #ifdef __18F25J11
                      00102      #define CONFIG_AS_FLASH
                      00103      #define DEVICEID                .621
                      00104      #define WRITE_FLASH_BLOCKSIZE   .64
                      00105      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00106      #define END_FLASH               0x8000
                      00107      #define END_GPR                 0xEC0
                      00108 #endif
                      00109 
                      00110 #ifdef __18F25J50
                      00111      #define CONFIG_AS_FLASH
                      00112      #define DEVICEID                .609
                      00113      #define WRITE_FLASH_BLOCKSIZE   .64
                      00114      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00115      #define END_FLASH               0x8000
                      00116      #define END_GPR                 0xEC0
                      00117 #endif
                      00118 
                      00119 #ifdef __18F25K20
                      00120      #define DEVICEID                .259
                      00121      #define WRITE_FLASH_BLOCKSIZE   .32
                      00122      #define ERASE_FLASH_BLOCKSIZE   .64
                      00123      #define END_FLASH               0x8000
                      00124      #define END_GPR                 0x600
                      00125 #endif
                      00126 
                      00127 #ifdef __18F25K22
                      00128      #define DEVICEID                .682
                      00129      #define WRITE_FLASH_BLOCKSIZE   .64
                      00130      #define ERASE_FLASH_BLOCKSIZE   .64
                      00131      #define END_FLASH               0x8000
                      00132      #define END_GPR                 0x600
                      00133 #endif
                      00134 
                      00135 #ifdef __18F25K80
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136      #define DEVICEID                .780
                      00137      #define WRITE_FLASH_BLOCKSIZE   .64
                      00138      #define ERASE_FLASH_BLOCKSIZE   .64
                      00139      #define END_FLASH               0x8000
                      00140      #define END_GPR                 0xE41
                      00141 #endif
                      00142 
                      00143 #ifdef __18F26J11
                      00144      #define CONFIG_AS_FLASH
                      00145      #define DEVICEID                .622
                      00146      #define WRITE_FLASH_BLOCKSIZE   .64
                      00147      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00148      #define END_FLASH               0x10000
                      00149      #define END_GPR                 0xEC0
                      00150 #endif
                      00151 
                      00152 #ifdef __18F26J13
                      00153      #define CONFIG_AS_FLASH
                      00154      #define DEVICEID                .713
                      00155      #define WRITE_FLASH_BLOCKSIZE   .64
                      00156      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00157      #define END_FLASH               0x10000
                      00158      #define END_GPR                 0xEB0
                      00159 #endif
                      00160 
                      00161 #ifdef __18F26J50
                      00162      #define CONFIG_AS_FLASH
                      00163      #define DEVICEID                .610
                      00164      #define WRITE_FLASH_BLOCKSIZE   .64
                      00165      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00166      #define END_FLASH               0x10000
                      00167      #define END_GPR                 0xEC0
                      00168 #endif
                      00169 
                      00170 #ifdef __18F26J53
                      00171      #define CONFIG_AS_FLASH
                      00172      #define DEVICEID                .705
                      00173      #define WRITE_FLASH_BLOCKSIZE   .64
                      00174      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00175      #define END_FLASH               0x10000
                      00176      #define END_GPR                 0xEB0
                      00177 #endif
                      00178 
                      00179 #ifdef __18F26K20
                      00180      #define DEVICEID                .257
                      00181      #define WRITE_FLASH_BLOCKSIZE   .64
                      00182      #define ERASE_FLASH_BLOCKSIZE   .64
                      00183      #define END_FLASH               0x10000
                      00184      #define END_GPR                 0xF60
                      00185 #endif
                      00186 
                      00187 #ifdef __18F26K22
                      00188      #define DEVICEID                .674
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189      #define WRITE_FLASH_BLOCKSIZE   .64
                      00190      #define ERASE_FLASH_BLOCKSIZE   .64
                      00191      #define END_FLASH               0x10000
                      00192      #define END_GPR                 0xF38
                      00193 #endif
                      00194 
                      00195 #ifdef __18F26K80
                      00196      #define DEVICEID                .777
                      00197      #define WRITE_FLASH_BLOCKSIZE   .64
                      00198      #define ERASE_FLASH_BLOCKSIZE   .64
                      00199      #define END_FLASH               0x10000
                      00200      #define END_GPR                 0xE41
                      00201 #endif
                      00202 
                      00203 #ifdef __18F27J13
                      00204      #define CONFIG_AS_FLASH
                      00205      #define DEVICEID                .715
                      00206      #define WRITE_FLASH_BLOCKSIZE   .64
                      00207      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00208      #define END_FLASH               0x20000
                      00209      #define END_GPR                 0xEB0
                      00210 #endif
                      00211 
                      00212 #ifdef __18F27J53
                      00213      #define CONFIG_AS_FLASH
                      00214      #define DEVICEID                .707
                      00215      #define WRITE_FLASH_BLOCKSIZE   .64
                      00216      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00217      #define END_FLASH               0x20000
                      00218      #define END_GPR                 0xEB0
                      00219 #endif
                      00220 
                      00221 #ifdef __18F43K20
                      00222      #define DEVICEID                .262
                      00223      #define WRITE_FLASH_BLOCKSIZE   .8
                      00224      #define ERASE_FLASH_BLOCKSIZE   .64
                      00225      #define END_FLASH               0x2000
                      00226      #define END_GPR                 0x200
                      00227 #endif
                      00228 
                      00229 #ifdef __18F43K22
                      00230      #define DEVICEID                .696
                      00231      #define WRITE_FLASH_BLOCKSIZE   .64
                      00232      #define ERASE_FLASH_BLOCKSIZE   .64
                      00233      #define END_FLASH               0x2000
                      00234      #define END_GPR                 0x200
                      00235 #endif
                      00236 
                      00237 #ifdef __18F44J10
                      00238      #define CONFIG_AS_FLASH
                      00239      #define DEVICEID                .233
                      00240      #define WRITE_FLASH_BLOCKSIZE   .64
                      00241      #define ERASE_FLASH_BLOCKSIZE   .1024
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00242      #define END_FLASH               0x4000
                      00243      #define END_GPR                 0x400
                      00244 #endif
                      00245 
                      00246 #ifdef __18F44J11
                      00247      #define CONFIG_AS_FLASH
                      00248      #define DEVICEID                .623
                      00249      #define WRITE_FLASH_BLOCKSIZE   .64
                      00250      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00251      #define END_FLASH               0x4000
                      00252      #define END_GPR                 0xEC0
                      00253 #endif
                      00254 
                      00255 #ifdef __18F44J50
                      00256      #define CONFIG_AS_FLASH
                      00257      #define DEVICEID                .611
                      00258      #define WRITE_FLASH_BLOCKSIZE   .64
                      00259      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00260      #define END_FLASH               0x4000
                      00261      #define END_GPR                 0xEC0
                      00262 #endif
                      00263 
                      00264 #ifdef __18F44K20
                      00265      #define DEVICEID                .260
                      00266      #define WRITE_FLASH_BLOCKSIZE   .32
                      00267      #define ERASE_FLASH_BLOCKSIZE   .64
                      00268      #define END_FLASH               0x4000
                      00269      #define END_GPR                 0x300
                      00270 #endif
                      00271 
                      00272 #ifdef __18F44K22
                      00273      #define DEVICEID                .688
                      00274      #define WRITE_FLASH_BLOCKSIZE   .64
                      00275      #define ERASE_FLASH_BLOCKSIZE   .64
                      00276      #define END_FLASH               0x4000
                      00277      #define END_GPR                 0x300
                      00278 #endif
                      00279 
                      00280 #ifdef __18F45J10
                      00281      #define CONFIG_AS_FLASH
                      00282      #define DEVICEID                .225
                      00283      #define WRITE_FLASH_BLOCKSIZE   .64
                      00284      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00285      #define END_FLASH               0x8000
                      00286      #define END_GPR                 0x400
                      00287 #endif
                      00288 
                      00289 #ifdef __18F45J11
                      00290      #define CONFIG_AS_FLASH
                      00291      #define DEVICEID                .624
                      00292      #define WRITE_FLASH_BLOCKSIZE   .64
                      00293      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00294      #define END_FLASH               0x8000
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00295      #define END_GPR                 0xEC0
                      00296 #endif
                      00297 
                      00298 #ifdef __18F45J50
                      00299      #define CONFIG_AS_FLASH
                      00300      #define DEVICEID                .612
                      00301      #define WRITE_FLASH_BLOCKSIZE   .64
                      00302      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00303      #define END_FLASH               0x8000
                      00304      #define END_GPR                 0xEC0
                      00305 #endif
                      00306 
                      00307 #ifdef __18F45K20
                      00308      #define DEVICEID                .258
                      00309      #define WRITE_FLASH_BLOCKSIZE   .32
                      00310      #define ERASE_FLASH_BLOCKSIZE   .64
                      00311      #define END_FLASH               0x8000
                      00312      #define END_GPR                 0x600
                      00313 #endif
                      00314 
                      00315 #ifdef __18F45K22
                      00316      #define DEVICEID                .680
                      00317      #define WRITE_FLASH_BLOCKSIZE   .64
                      00318      #define ERASE_FLASH_BLOCKSIZE   .64
                      00319      #define END_FLASH               0x8000
                      00320      #define END_GPR                 0x600
                      00321 #endif
                      00322 
                      00323 #ifdef __18F45K80
                      00324      #define DEVICEID                .779
                      00325      #define WRITE_FLASH_BLOCKSIZE   .64
                      00326      #define ERASE_FLASH_BLOCKSIZE   .64
                      00327      #define END_FLASH               0x8000
                      00328      #define END_GPR                 0xE41
                      00329 #endif
                      00330 
                      00331 #ifdef __18F46J11
                      00332      #define CONFIG_AS_FLASH
                      00333      #define DEVICEID                .625
                      00334      #define WRITE_FLASH_BLOCKSIZE   .64
                      00335      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00336      #define END_FLASH               0x10000
                      00337      #define END_GPR                 0xEC0
                      00338 #endif
                      00339 
                      00340 #ifdef __18F46J13
                      00341      #define CONFIG_AS_FLASH
                      00342      #define DEVICEID                .717
                      00343      #define WRITE_FLASH_BLOCKSIZE   .64
                      00344      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00345      #define END_FLASH               0x10000
                      00346      #define END_GPR                 0xEB0
                      00347 #endif
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00348 
                      00349 #ifdef __18F46J50
                      00350      #define CONFIG_AS_FLASH
                      00351      #define DEVICEID                .613
                      00352      #define WRITE_FLASH_BLOCKSIZE   .64
                      00353      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00354      #define END_FLASH               0x10000
                      00355      #define END_GPR                 0xEC0
                      00356 #endif
                      00357 
                      00358 #ifdef __18F46J53
                      00359      #define CONFIG_AS_FLASH
                      00360      #define DEVICEID                .709
                      00361      #define WRITE_FLASH_BLOCKSIZE   .64
                      00362      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00363      #define END_FLASH               0x10000
                      00364      #define END_GPR                 0xEB0
                      00365 #endif
                      00366 
                      00367 #ifdef __18F46K20
                      00368      #define DEVICEID                .256
                      00369      #define WRITE_FLASH_BLOCKSIZE   .64
                      00370      #define ERASE_FLASH_BLOCKSIZE   .64
                      00371      #define END_FLASH               0x10000
                      00372      #define END_GPR                 0xF60
                      00373 #endif
                      00374 
                      00375 #ifdef __18F46K22
                      00376      #define DEVICEID                .672
                      00377      #define WRITE_FLASH_BLOCKSIZE   .64
                      00378      #define ERASE_FLASH_BLOCKSIZE   .64
                      00379      #define END_FLASH               0x10000
                      00380      #define END_GPR                 0xF38
                      00381 #endif
                      00382 
                      00383 #ifdef __18F46K80
                      00384      #define DEVICEID                .776
                      00385      #define WRITE_FLASH_BLOCKSIZE   .64
                      00386      #define ERASE_FLASH_BLOCKSIZE   .64
                      00387      #define END_FLASH               0x10000
                      00388      #define END_GPR                 0xE41
                      00389 #endif
                      00390 
                      00391 #ifdef __18F47J13
                      00392      #define CONFIG_AS_FLASH
                      00393      #define DEVICEID                .719
                      00394      #define WRITE_FLASH_BLOCKSIZE   .64
                      00395      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00396      #define END_FLASH               0x20000
                      00397      #define END_GPR                 0xEB0
                      00398 #endif
                      00399 
                      00400 #ifdef __18F47J53
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00401      #define CONFIG_AS_FLASH
                      00402      #define DEVICEID                .711
                      00403      #define WRITE_FLASH_BLOCKSIZE   .64
                      00404      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00405      #define END_FLASH               0x20000
                      00406      #define END_GPR                 0xEB0
                      00407 #endif
                      00408 
                      00409 #ifdef __18F63J11
                      00410      #define CONFIG_AS_FLASH
                      00411      #define DEVICEID                .456
                      00412      #define WRITE_FLASH_BLOCKSIZE   .64
                      00413      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00414      #define END_FLASH               0x2000
                      00415      #define END_GPR                 0x400
                      00416 #endif
                      00417 
                      00418 #ifdef __18F63J90
                      00419      #define CONFIG_AS_FLASH
                      00420      #define DEVICEID                .448
                      00421      #define WRITE_FLASH_BLOCKSIZE   .64
                      00422      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00423      #define END_FLASH               0x2000
                      00424      #define END_GPR                 0x400
                      00425 #endif
                      00426 
                      00427 #ifdef __18F64J11
                      00428      #define CONFIG_AS_FLASH
                      00429      #define DEVICEID                .457
                      00430      #define WRITE_FLASH_BLOCKSIZE   .64
                      00431      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00432      #define END_FLASH               0x4000
                      00433      #define END_GPR                 0x400
                      00434 #endif
                      00435 
                      00436 #ifdef __18F64J90
                      00437      #define CONFIG_AS_FLASH
                      00438      #define DEVICEID                .449
                      00439      #define WRITE_FLASH_BLOCKSIZE   .64
                      00440      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00441      #define END_FLASH               0x4000
                      00442      #define END_GPR                 0x400
                      00443 #endif
                      00444 
                      00445 #ifdef __18F65J10
                      00446      #define CONFIG_AS_FLASH
                      00447      #define DEVICEID                .169
                      00448      #define WRITE_FLASH_BLOCKSIZE   .64
                      00449      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00450      #define END_FLASH               0x8000
                      00451      #define END_GPR                 0x800
                      00452 #endif
                      00453 
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00454 #ifdef __18F65J11
                      00455      #define CONFIG_AS_FLASH
                      00456      #define DEVICEID                .459
                      00457      #define WRITE_FLASH_BLOCKSIZE   .64
                      00458      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00459      #define END_FLASH               0x8000
                      00460      #define END_GPR                 0x800
                      00461 #endif
                      00462 
                      00463 #ifdef __18F65J15
                      00464      #define CONFIG_AS_FLASH
                      00465      #define DEVICEID                .170
                      00466      #define WRITE_FLASH_BLOCKSIZE   .64
                      00467      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00468      #define END_FLASH               0xC000
                      00469      #define END_GPR                 0x800
                      00470 #endif
                      00471 
                      00472 #ifdef __18F65J50
                      00473      #define CONFIG_AS_FLASH
                      00474      #define DEVICEID                .520
                      00475      #define WRITE_FLASH_BLOCKSIZE   .64
                      00476      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00477      #define END_FLASH               0x8000
                      00478      #define END_GPR                 0xF40
                      00479 #endif
                      00480 
                      00481 #ifdef __18F65J90
                      00482      #define CONFIG_AS_FLASH
                      00483      #define DEVICEID                .451
                      00484      #define WRITE_FLASH_BLOCKSIZE   .64
                      00485      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00486      #define END_FLASH               0x8000
                      00487      #define END_GPR                 0x800
                      00488 #endif
                      00489 
                      00490 #ifdef __18F65K22
                      00491      #define DEVICEID                .664
                      00492      #define WRITE_FLASH_BLOCKSIZE   .64
                      00493      #define ERASE_FLASH_BLOCKSIZE   .64
                      00494      #define END_FLASH               0x8000
                      00495      #define END_GPR                 0x800
                      00496 #endif
                      00497 
                      00498 #ifdef __18F65K80
                      00499      #define DEVICEID                .778
                      00500      #define WRITE_FLASH_BLOCKSIZE   .64
                      00501      #define ERASE_FLASH_BLOCKSIZE   .64
                      00502      #define END_FLASH               0x8000
                      00503      #define END_GPR                 0xE41
                      00504 #endif
                      00505 
                      00506 #ifdef __18F65K90
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00507      #define DEVICEID                .658
                      00508      #define WRITE_FLASH_BLOCKSIZE   .64
                      00509      #define ERASE_FLASH_BLOCKSIZE   .64
                      00510      #define END_FLASH               0x8000
                      00511      #define END_GPR                 0x800
                      00512 #endif
                      00513 
                      00514 #ifdef __18F66J10
                      00515      #define CONFIG_AS_FLASH
                      00516      #define DEVICEID                .171
                      00517      #define WRITE_FLASH_BLOCKSIZE   .64
                      00518      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00519      #define END_FLASH               0x10000
                      00520      #define END_GPR                 0x800
                      00521 #endif
                      00522 
                      00523 #ifdef __18F66J11
                      00524      #define CONFIG_AS_FLASH
                      00525      #define DEVICEID                .546
                      00526      #define WRITE_FLASH_BLOCKSIZE   .64
                      00527      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00528      #define END_FLASH               0x10000
                      00529      #define END_GPR                 0xF40
                      00530 #endif
                      00531 
                      00532 #ifdef __18F66J15
                      00533      #define CONFIG_AS_FLASH
                      00534      #define DEVICEID                .172
                      00535      #define WRITE_FLASH_BLOCKSIZE   .64
                      00536      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00537      #define END_FLASH               0x18000
                      00538      #define END_GPR                 0xF60
                      00539 #endif
                      00540 
                      00541 #ifdef __18F66J16
                      00542      #define CONFIG_AS_FLASH
                      00543      #define DEVICEID                .547
                      00544      #define WRITE_FLASH_BLOCKSIZE   .64
                      00545      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00546      #define END_FLASH               0x18000
                      00547      #define END_GPR                 0xF40
                      00548 #endif
                      00549 
                      00550 #ifdef __18F66J50
                      00551      #define CONFIG_AS_FLASH
                      00552      #define DEVICEID                .522
                      00553      #define WRITE_FLASH_BLOCKSIZE   .64
                      00554      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00555      #define END_FLASH               0x10000
                      00556      #define END_GPR                 0xF40
                      00557 #endif
                      00558 
                      00559 #ifdef __18F66J55
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00560      #define CONFIG_AS_FLASH
                      00561      #define DEVICEID                .523
                      00562      #define WRITE_FLASH_BLOCKSIZE   .64
                      00563      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00564      #define END_FLASH               0x18000
                      00565      #define END_GPR                 0xF40
                      00566 #endif
                      00567 
                      00568 #ifdef __18F66J60
                      00569      #define CONFIG_AS_FLASH
                      00570      #define DEVICEID                .192
                      00571      #define WRITE_FLASH_BLOCKSIZE   .64
                      00572      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00573      #define END_FLASH               0x10000
                      00574      #define END_GPR                 0xE80
                      00575 #endif
                      00576 
                      00577 #ifdef __18F66J65
                      00578      #define CONFIG_AS_FLASH
                      00579      #define DEVICEID                .248
                      00580      #define WRITE_FLASH_BLOCKSIZE   .64
                      00581      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00582      #define END_FLASH               0x18000
                      00583      #define END_GPR                 0xE80
                      00584 #endif
                      00585 
                      00586 #ifdef __18F66J90
                      00587      #define CONFIG_AS_FLASH
                      00588      #define DEVICEID                .640
                      00589      #define WRITE_FLASH_BLOCKSIZE   .64
                      00590      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00591      #define END_FLASH               0x10000
                      00592      #define END_GPR                 0xF54
                      00593 #endif
                      00594 
                      00595 #ifdef __18F66J93
                      00596      #define CONFIG_AS_FLASH
                      00597      #define DEVICEID                .642
                      00598      #define WRITE_FLASH_BLOCKSIZE   .64
                      00599      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00600      #define END_FLASH               0x10000
                      00601      #define END_GPR                 0xF54
                      00602 #endif
                      00603 
                      00604 #ifdef __18F66K22
                      00605      #define DEVICEID                .662
                      00606      #define WRITE_FLASH_BLOCKSIZE   .64
                      00607      #define ERASE_FLASH_BLOCKSIZE   .64
                      00608      #define END_FLASH               0x10000
                      00609      #define END_GPR                 0xF16
                      00610 #endif
                      00611 
                      00612 #ifdef __18F66K80
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00613      #define DEVICEID                .775
                      00614      #define WRITE_FLASH_BLOCKSIZE   .64
                      00615      #define ERASE_FLASH_BLOCKSIZE   .64
                      00616      #define END_FLASH               0x10000
                      00617      #define END_GPR                 0xE41
                      00618 #endif
                      00619 
                      00620 #ifdef __18F66K90
                      00621      #define DEVICEID                .656
                      00622      #define WRITE_FLASH_BLOCKSIZE   .64
                      00623      #define ERASE_FLASH_BLOCKSIZE   .64
                      00624      #define END_FLASH               0x10000
                      00625      #define END_GPR                 0xEF4
                      00626 #endif
                      00627 
                      00628 #ifdef __18F67J10
                      00629      #define CONFIG_AS_FLASH
                      00630      #define DEVICEID                .173
                      00631      #define WRITE_FLASH_BLOCKSIZE   .64
                      00632      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00633      #define END_FLASH               0x20000
                      00634      #define END_GPR                 0xF60
                      00635 #endif
                      00636 
                      00637 #ifdef __18F67J11
                      00638      #define CONFIG_AS_FLASH
                      00639      #define DEVICEID                .548
                      00640      #define WRITE_FLASH_BLOCKSIZE   .64
                      00641      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00642      #define END_FLASH               0x20000
                      00643      #define END_GPR                 0xF40
                      00644 #endif
                      00645 
                      00646 #ifdef __18F67J50
                      00647      #define CONFIG_AS_FLASH
                      00648      #define DEVICEID                .524
                      00649      #define WRITE_FLASH_BLOCKSIZE   .64
                      00650      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00651      #define END_FLASH               0x20000
                      00652      #define END_GPR                 0xF40
                      00653 #endif
                      00654 
                      00655 #ifdef __18F67J60
                      00656      #define CONFIG_AS_FLASH
                      00657      #define DEVICEID                .249
                      00658      #define WRITE_FLASH_BLOCKSIZE   .64
                      00659      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00660      #define END_FLASH               0x20000
                      00661      #define END_GPR                 0xE80
                      00662 #endif
                      00663 
                      00664 #ifdef __18F67J90
                      00665      #define CONFIG_AS_FLASH
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00666      #define DEVICEID                .641
                      00667      #define WRITE_FLASH_BLOCKSIZE   .64
                      00668      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00669      #define END_FLASH               0x20000
                      00670      #define END_GPR                 0xF54
                      00671 #endif
                      00672 
                      00673 #ifdef __18F67J93
                      00674      #define CONFIG_AS_FLASH
                      00675      #define DEVICEID                .643
                      00676      #define WRITE_FLASH_BLOCKSIZE   .64
                      00677      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00678      #define END_FLASH               0x20000
                      00679      #define END_GPR                 0xF54
                      00680 #endif
                      00681 
                      00682 #ifdef __18F67K22
                      00683      #define DEVICEID                .652
                      00684      #define WRITE_FLASH_BLOCKSIZE   .128
                      00685      #define ERASE_FLASH_BLOCKSIZE   .128
                      00686      #define END_FLASH               0x20000
                      00687      #define END_GPR                 0xF16
                      00688 #endif
                      00689 
                      00690 #ifdef __18F67K90
                      00691      #define DEVICEID                .648
                      00692      #define WRITE_FLASH_BLOCKSIZE   .128
                      00693      #define ERASE_FLASH_BLOCKSIZE   .128
                      00694      #define END_FLASH               0x20000
                      00695      #define END_GPR                 0xEF4
                      00696 #endif
                      00697 
                      00698 #ifdef __18F83J11
                      00699      #define CONFIG_AS_FLASH
                      00700      #define DEVICEID                .460
                      00701      #define WRITE_FLASH_BLOCKSIZE   .64
                      00702      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00703      #define END_FLASH               0x2000
                      00704      #define END_GPR                 0x400
                      00705 #endif
                      00706 
                      00707 #ifdef __18F83J90
                      00708      #define CONFIG_AS_FLASH
                      00709      #define DEVICEID                .452
                      00710      #define WRITE_FLASH_BLOCKSIZE   .64
                      00711      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00712      #define END_FLASH               0x2000
                      00713      #define END_GPR                 0x400
                      00714 #endif
                      00715 
                      00716 #ifdef __18F84J11
                      00717      #define CONFIG_AS_FLASH
                      00718      #define DEVICEID                .461
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00719      #define WRITE_FLASH_BLOCKSIZE   .64
                      00720      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00721      #define END_FLASH               0x4000
                      00722      #define END_GPR                 0x400
                      00723 #endif
                      00724 
                      00725 #ifdef __18F84J90
                      00726      #define CONFIG_AS_FLASH
                      00727      #define DEVICEID                .453
                      00728      #define WRITE_FLASH_BLOCKSIZE   .64
                      00729      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00730      #define END_FLASH               0x4000
                      00731      #define END_GPR                 0x400
                      00732 #endif
                      00733 
                      00734 #ifdef __18F85J10
                      00735      #define CONFIG_AS_FLASH
                      00736      #define DEVICEID                .175
                      00737      #define WRITE_FLASH_BLOCKSIZE   .64
                      00738      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00739      #define END_FLASH               0x8000
                      00740      #define END_GPR                 0x800
                      00741 #endif
                      00742 
                      00743 #ifdef __18F85J11
                      00744      #define CONFIG_AS_FLASH
                      00745      #define DEVICEID                .463
                      00746      #define WRITE_FLASH_BLOCKSIZE   .64
                      00747      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00748      #define END_FLASH               0x8000
                      00749      #define END_GPR                 0x800
                      00750 #endif
                      00751 
                      00752 #ifdef __18F85J15
                      00753      #define CONFIG_AS_FLASH
                      00754      #define DEVICEID                .184
                      00755      #define WRITE_FLASH_BLOCKSIZE   .64
                      00756      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00757      #define END_FLASH               0xC000
                      00758      #define END_GPR                 0x800
                      00759 #endif
                      00760 
                      00761 #ifdef __18F85J50
                      00762      #define CONFIG_AS_FLASH
                      00763      #define DEVICEID                .525
                      00764      #define WRITE_FLASH_BLOCKSIZE   .64
                      00765      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00766      #define END_FLASH               0x8000
                      00767      #define END_GPR                 0xF40
                      00768 #endif
                      00769 
                      00770 #ifdef __18F85J90
                      00771      #define CONFIG_AS_FLASH
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00772      #define DEVICEID                .455
                      00773      #define WRITE_FLASH_BLOCKSIZE   .64
                      00774      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00775      #define END_FLASH               0x8000
                      00776      #define END_GPR                 0x800
                      00777 #endif
                      00778 
                      00779 #ifdef __18F85K22
                      00780      #define DEVICEID                .667
                      00781      #define WRITE_FLASH_BLOCKSIZE   .64
                      00782      #define ERASE_FLASH_BLOCKSIZE   .64
                      00783      #define END_FLASH               0x8000
                      00784      #define END_GPR                 0x800
                      00785 #endif
                      00786 
                      00787 #ifdef __18F85K90
                      00788      #define DEVICEID                .661
                      00789      #define WRITE_FLASH_BLOCKSIZE   .64
                      00790      #define ERASE_FLASH_BLOCKSIZE   .64
                      00791      #define END_FLASH               0x8000
                      00792      #define END_GPR                 0x800
                      00793 #endif
                      00794 
                      00795 #ifdef __18F86J10
                      00796      #define CONFIG_AS_FLASH
                      00797      #define DEVICEID                .185
                      00798      #define WRITE_FLASH_BLOCKSIZE   .64
                      00799      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00800      #define END_FLASH               0x10000
                      00801      #define END_GPR                 0x800
                      00802 #endif
                      00803 
                      00804 #ifdef __18F86J11
                      00805      #define CONFIG_AS_FLASH
                      00806      #define DEVICEID                .551
                      00807      #define WRITE_FLASH_BLOCKSIZE   .64
                      00808      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00809      #define END_FLASH               0x10000
                      00810      #define END_GPR                 0xF40
                      00811 #endif
                      00812 
                      00813 #ifdef __18F86J15
                      00814      #define CONFIG_AS_FLASH
                      00815      #define DEVICEID                .186
                      00816      #define WRITE_FLASH_BLOCKSIZE   .64
                      00817      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00818      #define END_FLASH               0x18000
                      00819      #define END_GPR                 0xF60
                      00820 #endif
                      00821 
                      00822 #ifdef __18F86J16
                      00823      #define CONFIG_AS_FLASH
                      00824      #define DEVICEID                .552
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00825      #define WRITE_FLASH_BLOCKSIZE   .64
                      00826      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00827      #define END_FLASH               0x18000
                      00828      #define END_GPR                 0xF40
                      00829 #endif
                      00830 
                      00831 #ifdef __18F86J50
                      00832      #define CONFIG_AS_FLASH
                      00833      #define DEVICEID                .527
                      00834      #define WRITE_FLASH_BLOCKSIZE   .64
                      00835      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00836      #define END_FLASH               0x10000
                      00837      #define END_GPR                 0xF40
                      00838 #endif
                      00839 
                      00840 #ifdef __18F86J55
                      00841      #define CONFIG_AS_FLASH
                      00842      #define DEVICEID                .528
                      00843      #define WRITE_FLASH_BLOCKSIZE   .64
                      00844      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00845      #define END_FLASH               0x18000
                      00846      #define END_GPR                 0xF40
                      00847 #endif
                      00848 
                      00849 #ifdef __18F86J60
                      00850      #define CONFIG_AS_FLASH
                      00851      #define DEVICEID                .193
                      00852      #define WRITE_FLASH_BLOCKSIZE   .64
                      00853      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00854      #define END_FLASH               0x10000
                      00855      #define END_GPR                 0xE80
                      00856 #endif
                      00857 
                      00858 #ifdef __18F86J65
                      00859      #define CONFIG_AS_FLASH
                      00860      #define DEVICEID                .250
                      00861      #define WRITE_FLASH_BLOCKSIZE   .64
                      00862      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00863      #define END_FLASH               0x18000
                      00864      #define END_GPR                 0xE80
                      00865 #endif
                      00866 
                      00867 #ifdef __18F86J72
                      00868      #define CONFIG_AS_FLASH
                      00869      #define DEVICEID                .642
                      00870      #define WRITE_FLASH_BLOCKSIZE   .64
                      00871      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00872      #define END_FLASH               0x10000
                      00873      #define END_GPR                 0xF54
                      00874 #endif
                      00875 
                      00876 #ifdef __18F86J90
                      00877      #define CONFIG_AS_FLASH
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00878      #define DEVICEID                .644
                      00879      #define WRITE_FLASH_BLOCKSIZE   .64
                      00880      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00881      #define END_FLASH               0x10000
                      00882      #define END_GPR                 0xF54
                      00883 #endif
                      00884 
                      00885 #ifdef __18F86J93
                      00886      #define CONFIG_AS_FLASH
                      00887      #define DEVICEID                .646
                      00888      #define WRITE_FLASH_BLOCKSIZE   .64
                      00889      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00890      #define END_FLASH               0x10000
                      00891      #define END_GPR                 0xF54
                      00892 #endif
                      00893 
                      00894 #ifdef __18F86K22
                      00895      #define DEVICEID                .665
                      00896      #define WRITE_FLASH_BLOCKSIZE   .64
                      00897      #define ERASE_FLASH_BLOCKSIZE   .64
                      00898      #define END_FLASH               0x10000
                      00899      #define END_GPR                 0xF16
                      00900 #endif
                      00901 
                      00902 #ifdef __18F86K90
                      00903      #define DEVICEID                .659
                      00904      #define WRITE_FLASH_BLOCKSIZE   .64
                      00905      #define ERASE_FLASH_BLOCKSIZE   .64
                      00906      #define END_FLASH               0x10000
                      00907      #define END_GPR                 0xEF4
                      00908 #endif
                      00909 
                      00910 #ifdef __18F87J10
                      00911      #define CONFIG_AS_FLASH
                      00912      #define DEVICEID                .187
                      00913      #define WRITE_FLASH_BLOCKSIZE   .64
                      00914      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00915      #define END_FLASH               0x20000
                      00916      #define END_GPR                 0xF60
                      00917 #endif
                      00918 
                      00919 #ifdef __18F87J11
                      00920      #define CONFIG_AS_FLASH
                      00921      #define DEVICEID                .553
                      00922      #define WRITE_FLASH_BLOCKSIZE   .64
                      00923      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00924      #define END_FLASH               0x20000
                      00925      #define END_GPR                 0xF40
                      00926 #endif
                      00927 
                      00928 #ifdef __18F87J50
                      00929      #define CONFIG_AS_FLASH
                      00930      #define DEVICEID                .529
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00931      #define WRITE_FLASH_BLOCKSIZE   .64
                      00932      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00933      #define END_FLASH               0x20000
                      00934      #define END_GPR                 0xF40
                      00935 #endif
                      00936 
                      00937 #ifdef __18F87J60
                      00938      #define CONFIG_AS_FLASH
                      00939      #define DEVICEID                .251
                      00940      #define WRITE_FLASH_BLOCKSIZE   .64
                      00941      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00942      #define END_FLASH               0x20000
                      00943      #define END_GPR                 0xE80
                      00944 #endif
                      00945 
                      00946 #ifdef __18F87J72
                      00947      #define CONFIG_AS_FLASH
                      00948      #define DEVICEID                .643
                      00949      #define WRITE_FLASH_BLOCKSIZE   .64
                      00950      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00951      #define END_FLASH               0x20000
                      00952      #define END_GPR                 0xF54
                      00953 #endif
                      00954 
                      00955 #ifdef __18F87J90
                      00956      #define CONFIG_AS_FLASH
                      00957      #define DEVICEID                .645
                      00958      #define WRITE_FLASH_BLOCKSIZE   .64
                      00959      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00960      #define END_FLASH               0x20000
                      00961      #define END_GPR                 0xF54
                      00962 #endif
                      00963 
                      00964 #ifdef __18F87J93
                      00965      #define CONFIG_AS_FLASH
                      00966      #define DEVICEID                .647
                      00967      #define WRITE_FLASH_BLOCKSIZE   .64
                      00968      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00969      #define END_FLASH               0x20000
                      00970      #define END_GPR                 0xF54
                      00971 #endif
                      00972 
                      00973 #ifdef __18F87K22
                      00974      #define DEVICEID                .654
                      00975      #define WRITE_FLASH_BLOCKSIZE   .128
                      00976      #define ERASE_FLASH_BLOCKSIZE   .128
                      00977      #define END_FLASH               0x20000
                      00978      #define END_GPR                 0xF16
                      00979 #endif
                      00980 
                      00981 #ifdef __18F87K90
                      00982      #define DEVICEID                .650
                      00983      #define WRITE_FLASH_BLOCKSIZE   .128
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00984      #define ERASE_FLASH_BLOCKSIZE   .128
                      00985      #define END_FLASH               0x20000
                      00986      #define END_GPR                 0xEF4
                      00987 #endif
                      00988 
                      00989 #ifdef __18F96J60
                      00990      #define CONFIG_AS_FLASH
                      00991      #define DEVICEID                .194
                      00992      #define WRITE_FLASH_BLOCKSIZE   .64
                      00993      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00994      #define END_FLASH               0x10000
                      00995      #define END_GPR                 0xE80
                      00996 #endif
                      00997 
                      00998 #ifdef __18F96J65
                      00999      #define CONFIG_AS_FLASH
                      01000      #define DEVICEID                .252
                      01001      #define WRITE_FLASH_BLOCKSIZE   .64
                      01002      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01003      #define END_FLASH               0x18000
                      01004      #define END_GPR                 0xE80
                      01005 #endif
                      01006 
                      01007 #ifdef __18F97J60
                      01008      #define CONFIG_AS_FLASH
                      01009      #define DEVICEID                .253
                      01010      #define WRITE_FLASH_BLOCKSIZE   .64
                      01011      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01012      #define END_FLASH               0x20000
                      01013      #define END_GPR                 0xE80
                      01014 #endif
                      01015 
                      01016 #ifdef __18F242
                      01017      #define DEVICEID                .36
                      01018      #define WRITE_FLASH_BLOCKSIZE   .8
                      01019      #define ERASE_FLASH_BLOCKSIZE   .64
                      01020      #define END_FLASH               0x4000
                      01021      #define END_GPR                 0x300
                      01022 #endif
                      01023 
                      01024 #ifdef __18F248
                      01025      #define DEVICEID                .64
                      01026      #define WRITE_FLASH_BLOCKSIZE   .8
                      01027      #define ERASE_FLASH_BLOCKSIZE   .64
                      01028      #define END_FLASH               0x4000
                      01029      #define END_GPR                 0x300
                      01030 #endif
                      01031 
                      01032 #ifdef __18F252
                      01033      #define DEVICEID                .32
                      01034      #define WRITE_FLASH_BLOCKSIZE   .8
                      01035      #define ERASE_FLASH_BLOCKSIZE   .64
                      01036      #define END_FLASH               0x8000
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01037      #define END_GPR                 0x600
                      01038 #endif
                      01039 
                      01040 #ifdef __18F258
                      01041      #define DEVICEID                .66
                      01042      #define WRITE_FLASH_BLOCKSIZE   .8
                      01043      #define ERASE_FLASH_BLOCKSIZE   .64
                      01044      #define END_FLASH               0x8000
                      01045      #define END_GPR                 0x600
                      01046 #endif
                      01047 
                      01048 #ifdef __18F442
                      01049      #define DEVICEID                .37
                      01050      #define WRITE_FLASH_BLOCKSIZE   .8
                      01051      #define ERASE_FLASH_BLOCKSIZE   .64
                      01052      #define END_FLASH               0x4000
                      01053      #define END_GPR                 0x300
                      01054 #endif
                      01055 
                      01056 #ifdef __18F448
                      01057      #define DEVICEID                .65
                      01058      #define WRITE_FLASH_BLOCKSIZE   .8
                      01059      #define ERASE_FLASH_BLOCKSIZE   .64
                      01060      #define END_FLASH               0x4000
                      01061      #define END_GPR                 0x300
                      01062 #endif
                      01063 
                      01064 #ifdef __18F452
                      01065      #define DEVICEID                .33
                      01066      #define WRITE_FLASH_BLOCKSIZE   .8
                      01067      #define ERASE_FLASH_BLOCKSIZE   .64
                      01068      #define END_FLASH               0x8000
                      01069      #define END_GPR                 0x600
                      01070 #endif
                      01071 
                      01072 #ifdef __18F458
                      01073      #define DEVICEID                .67
                      01074      #define WRITE_FLASH_BLOCKSIZE   .8
                      01075      #define ERASE_FLASH_BLOCKSIZE   .64
                      01076      #define END_FLASH               0x8000
                      01077      #define END_GPR                 0x600
                      01078 #endif
                      01079 
                      01080 #ifdef __18F1220
                      01081      #define DEVICEID                .63
                      01082      #define WRITE_FLASH_BLOCKSIZE   .8
                      01083      #define ERASE_FLASH_BLOCKSIZE   .64
                      01084      #define END_FLASH               0x1000
                      01085      #define END_GPR                 0x100
                      01086 #endif
                      01087 
                      01088 #ifdef __18F1230
                      01089      #define DEVICEID                .240
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01090      #define WRITE_FLASH_BLOCKSIZE   .8
                      01091      #define ERASE_FLASH_BLOCKSIZE   .64
                      01092      #define END_FLASH               0x1000
                      01093      #define END_GPR                 0x100
                      01094 #endif
                      01095 
                      01096 #ifdef __18F1320
                      01097      #define DEVICEID                .62
                      01098      #define WRITE_FLASH_BLOCKSIZE   .8
                      01099      #define ERASE_FLASH_BLOCKSIZE   .64
                      01100      #define END_FLASH               0x2000
                      01101      #define END_GPR                 0x100
                      01102 #endif
                      01103 
                      01104 #ifdef __18F1330
                      01105      #define DEVICEID                .241
                      01106      #define WRITE_FLASH_BLOCKSIZE   .8
                      01107      #define ERASE_FLASH_BLOCKSIZE   .64
                      01108      #define END_FLASH               0x2000
                      01109      #define END_GPR                 0x100
                      01110 #endif
                      01111 
                      01112 #ifdef __18F2220
                      01113      #define DEVICEID                .44
                      01114      #define WRITE_FLASH_BLOCKSIZE   .8
                      01115      #define ERASE_FLASH_BLOCKSIZE   .64
                      01116      #define END_FLASH               0x1000
                      01117      #define END_GPR                 0x200
                      01118 #endif
                      01119 
                      01120 #ifdef __18F2221
                      01121      #define DEVICEID                .267
                      01122      #define WRITE_FLASH_BLOCKSIZE   .8
                      01123      #define ERASE_FLASH_BLOCKSIZE   .64
                      01124      #define END_FLASH               0x1000
                      01125      #define END_GPR                 0x200
                      01126 #endif
                      01127 
                      01128 #ifdef __18F2320
                      01129      #define DEVICEID                .40
                      01130      #define WRITE_FLASH_BLOCKSIZE   .8
                      01131      #define ERASE_FLASH_BLOCKSIZE   .64
                      01132      #define END_FLASH               0x2000
                      01133      #define END_GPR                 0x200
                      01134 #endif
                      01135 
                      01136 #ifdef __18F2321
                      01137      #define DEVICEID                .265
                      01138      #define WRITE_FLASH_BLOCKSIZE   .8
                      01139      #define ERASE_FLASH_BLOCKSIZE   .64
                      01140      #define END_FLASH               0x2000
                      01141      #define END_GPR                 0x200
                      01142 #endif
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01143 
                      01144 #ifdef __18F2331
                      01145      #define DEVICEID                .71
                      01146      #define WRITE_FLASH_BLOCKSIZE   .8
                      01147      #define ERASE_FLASH_BLOCKSIZE   .64
                      01148      #define END_FLASH               0x2000
                      01149      #define END_GPR                 0x300
                      01150 #endif
                      01151 
                      01152 #ifdef __18F2410
                      01153      #define DEVICEID                .139
                      01154      #define WRITE_FLASH_BLOCKSIZE   .32
                      01155      #define ERASE_FLASH_BLOCKSIZE   .64
                      01156      #define END_FLASH               0x4000
                      01157      #define END_GPR                 0x300
                      01158 #endif
                      01159 
                      01160 #ifdef __18F2420
                      01161      #define DEVICEID                .138
                      01162      #define WRITE_FLASH_BLOCKSIZE   .32
                      01163      #define ERASE_FLASH_BLOCKSIZE   .64
                      01164      #define END_FLASH               0x4000
                      01165      #define END_GPR                 0x300
                      01166 #endif
                      01167 
                      01168 #ifdef __18F2423
                      01169      #define DEVICEID                .277
                      01170      #define WRITE_FLASH_BLOCKSIZE   .32
                      01171      #define ERASE_FLASH_BLOCKSIZE   .64
                      01172      #define END_FLASH               0x4000
                      01173      #define END_GPR                 0x300
                      01174 #endif
                      01175 
                      01176 #ifdef __18F2431
                      01177      #define DEVICEID                .70
                      01178      #define WRITE_FLASH_BLOCKSIZE   .8
                      01179      #define ERASE_FLASH_BLOCKSIZE   .64
                      01180      #define END_FLASH               0x4000
                      01181      #define END_GPR                 0x300
                      01182 #endif
                      01183 
                      01184 #ifdef __18F2439
                      01185      #define DEVICEID                .36
                      01186      #define WRITE_FLASH_BLOCKSIZE   .8
                      01187      #define ERASE_FLASH_BLOCKSIZE   .64
                      01188      #define END_FLASH               0x3000
                      01189      #define END_GPR                 0x280
                      01190 #endif
                      01191 
                      01192 #ifdef __18F2450
                      01193      #define DEVICEID                .289
                      01194      #define WRITE_FLASH_BLOCKSIZE   .16
                      01195      #define ERASE_FLASH_BLOCKSIZE   .64
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01196      #define END_FLASH               0x4000
                      01197      #define END_GPR                 0x500
                      01198 #endif
                      01199 
                      01200 #ifdef __18F2455
                      01201      #define DEVICEID                .147
                      01202      #define WRITE_FLASH_BLOCKSIZE   .32
                      01203      #define ERASE_FLASH_BLOCKSIZE   .64
                      01204      #define END_FLASH               0x6000
                      01205      #define END_GPR                 0x800
                      01206 #endif
                      01207 
                      01208 #ifdef __18F2458
                      01209      #define DEVICEID                .339
                      01210      #define WRITE_FLASH_BLOCKSIZE   .32
                      01211      #define ERASE_FLASH_BLOCKSIZE   .64
                      01212      #define END_FLASH               0x6000
                      01213      #define END_GPR                 0x800
                      01214 #endif
                      01215 
                      01216 #ifdef __18F2480
                      01217      #define DEVICEID                .215
                      01218      #define WRITE_FLASH_BLOCKSIZE   .32
                      01219      #define ERASE_FLASH_BLOCKSIZE   .64
                      01220      #define END_FLASH               0x4000
                      01221      #define END_GPR                 0x300
                      01222 #endif
                      01223 
                      01224 #ifdef __18F2510
                      01225      #define DEVICEID                .137
                      01226      #define WRITE_FLASH_BLOCKSIZE   .32
                      01227      #define ERASE_FLASH_BLOCKSIZE   .64
                      01228      #define END_FLASH               0x8000
                      01229      #define END_GPR                 0x600
                      01230 #endif
                      01231 
                      01232 #ifdef __18F2515
                      01233      #define DEVICEID                .103
                      01234      #define WRITE_FLASH_BLOCKSIZE   .64
                      01235      #define ERASE_FLASH_BLOCKSIZE   .64
                      01236      #define END_FLASH               0xC000
                      01237      #define END_GPR                 0xF80
                      01238 #endif
                      01239 
                      01240 #ifdef __18F2520
                      01241      #define DEVICEID                .136
                      01242      #define WRITE_FLASH_BLOCKSIZE   .32
                      01243      #define ERASE_FLASH_BLOCKSIZE   .64
                      01244      #define END_FLASH               0x8000
                      01245      #define END_GPR                 0x600
                      01246 #endif
                      01247 
                      01248 #ifdef __18F2523
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01249      #define DEVICEID                .273
                      01250      #define WRITE_FLASH_BLOCKSIZE   .32
                      01251      #define ERASE_FLASH_BLOCKSIZE   .64
                      01252      #define END_FLASH               0x8000
                      01253      #define END_GPR                 0x600
                      01254 #endif
                      01255 
                      01256 #ifdef __18F2525
                      01257      #define DEVICEID                .102
                      01258      #define WRITE_FLASH_BLOCKSIZE   .64
                      01259      #define ERASE_FLASH_BLOCKSIZE   .64
                      01260      #define END_FLASH               0xC000
                      01261      #define END_GPR                 0xF80
                      01262 #endif
                      01263 
                      01264 #ifdef __18F2539
                      01265      #define DEVICEID                .32
                      01266      #define WRITE_FLASH_BLOCKSIZE   .8
                      01267      #define ERASE_FLASH_BLOCKSIZE   .64
                      01268      #define END_FLASH               0x6000
                      01269      #define END_GPR                 0x580
                      01270 #endif
                      01271 
                      01272 #ifdef __18F2550
                      01273      #define DEVICEID                .146
                      01274      #define WRITE_FLASH_BLOCKSIZE   .32
                      01275      #define ERASE_FLASH_BLOCKSIZE   .64
                      01276      #define END_FLASH               0x8000
                      01277      #define END_GPR                 0x800
                      01278 #endif
                      01279 
                      01280 #ifdef __18F2553
                      01281      #define DEVICEID                .338
                      01282      #define WRITE_FLASH_BLOCKSIZE   .32
                      01283      #define ERASE_FLASH_BLOCKSIZE   .64
                      01284      #define END_FLASH               0x8000
                      01285      #define END_GPR                 0x800
                      01286 #endif
                      01287 
                      01288 #ifdef __18F2580
                      01289      #define DEVICEID                .214
                      01290      #define WRITE_FLASH_BLOCKSIZE   .32
                      01291      #define ERASE_FLASH_BLOCKSIZE   .64
                      01292      #define END_FLASH               0x8000
                      01293      #define END_GPR                 0x600
                      01294 #endif
                      01295 
                      01296 #ifdef __18F2585
                      01297      #define DEVICEID                .119
                      01298      #define WRITE_FLASH_BLOCKSIZE   .64
                      01299      #define ERASE_FLASH_BLOCKSIZE   .64
                      01300      #define END_FLASH               0xC000
                      01301      #define END_GPR                 0xD00
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01302 #endif
                      01303 
                      01304 #ifdef __18F2610
                      01305      #define DEVICEID                .101
                      01306      #define WRITE_FLASH_BLOCKSIZE   .64
                      01307      #define ERASE_FLASH_BLOCKSIZE   .64
                      01308      #define END_FLASH               0x10000
                      01309      #define END_GPR                 0xF80
                      01310 #endif
                      01311 
                      01312 #ifdef __18F2620
                      01313      #define DEVICEID                .100
                      01314      #define WRITE_FLASH_BLOCKSIZE   .64
                      01315      #define ERASE_FLASH_BLOCKSIZE   .64
                      01316      #define END_FLASH               0x10000
                      01317      #define END_GPR                 0xF80
                      01318 #endif
                      01319 
                      01320 #ifdef __18F2680
                      01321      #define DEVICEID                .118
                      01322      #define WRITE_FLASH_BLOCKSIZE   .64
                      01323      #define ERASE_FLASH_BLOCKSIZE   .64
                      01324      #define END_FLASH               0x10000
                      01325      #define END_GPR                 0xD00
                      01326 #endif
                      01327 
                      01328 #ifdef __18F2682
                      01329      #define DEVICEID                .312
                      01330      #define WRITE_FLASH_BLOCKSIZE   .64
                      01331      #define ERASE_FLASH_BLOCKSIZE   .64
                      01332      #define END_FLASH               0x14000
                      01333      #define END_GPR                 0xD00
                      01334 #endif
                      01335 
                      01336 #ifdef __18F2685
                      01337      #define DEVICEID                .313
                      01338      #define WRITE_FLASH_BLOCKSIZE   .64
                      01339      #define ERASE_FLASH_BLOCKSIZE   .64
                      01340      #define END_FLASH               0x18000
                      01341      #define END_GPR                 0xD00
                      01342 #endif
                      01343 
                      01344 #ifdef __18F4220
                      01345      #define DEVICEID                .45
                      01346      #define WRITE_FLASH_BLOCKSIZE   .8
                      01347      #define ERASE_FLASH_BLOCKSIZE   .64
                      01348      #define END_FLASH               0x1000
                      01349      #define END_GPR                 0x200
                      01350 #endif
                      01351 
                      01352 #ifdef __18F4221
                      01353      #define DEVICEID                .266
                      01354      #define WRITE_FLASH_BLOCKSIZE   .8
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01355      #define ERASE_FLASH_BLOCKSIZE   .64
                      01356      #define END_FLASH               0x1000
                      01357      #define END_GPR                 0x200
                      01358 #endif
                      01359 
                      01360 #ifdef __18F4320
                      01361      #define DEVICEID                .41
                      01362      #define WRITE_FLASH_BLOCKSIZE   .8
                      01363      #define ERASE_FLASH_BLOCKSIZE   .64
                      01364      #define END_FLASH               0x2000
                      01365      #define END_GPR                 0x200
                      01366 #endif
                      01367 
                      01368 #ifdef __18F4321
                      01369      #define DEVICEID                .264
                      01370      #define WRITE_FLASH_BLOCKSIZE   .8
                      01371      #define ERASE_FLASH_BLOCKSIZE   .64
                      01372      #define END_FLASH               0x2000
                      01373      #define END_GPR                 0x200
                      01374 #endif
                      01375 
                      01376 #ifdef __18F4331
                      01377      #define DEVICEID                .69
                      01378      #define WRITE_FLASH_BLOCKSIZE   .8
                      01379      #define ERASE_FLASH_BLOCKSIZE   .64
                      01380      #define END_FLASH               0x2000
                      01381      #define END_GPR                 0x300
                      01382 #endif
                      01383 
                      01384 #ifdef __18F4410
                      01385      #define DEVICEID                .135
                      01386      #define WRITE_FLASH_BLOCKSIZE   .32
                      01387      #define ERASE_FLASH_BLOCKSIZE   .64
                      01388      #define END_FLASH               0x4000
                      01389      #define END_GPR                 0x300
                      01390 #endif
                      01391 
                      01392 #ifdef __18F4420
                      01393      #define DEVICEID                .134
                      01394      #define WRITE_FLASH_BLOCKSIZE   .32
                      01395      #define ERASE_FLASH_BLOCKSIZE   .64
                      01396      #define END_FLASH               0x4000
                      01397      #define END_GPR                 0x300
                      01398 #endif
                      01399 
                      01400 #ifdef __18F4423
                      01401      #define DEVICEID                .269
                      01402      #define WRITE_FLASH_BLOCKSIZE   .32
                      01403      #define ERASE_FLASH_BLOCKSIZE   .64
                      01404      #define END_FLASH               0x4000
                      01405      #define END_GPR                 0x300
                      01406 #endif
                      01407 
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01408 #ifdef __18F4431
                      01409      #define DEVICEID                .68
                      01410      #define WRITE_FLASH_BLOCKSIZE   .8
                      01411      #define ERASE_FLASH_BLOCKSIZE   .64
                      01412      #define END_FLASH               0x4000
                      01413      #define END_GPR                 0x300
                      01414 #endif
                      01415 
                      01416 #ifdef __18F4439
                      01417      #define DEVICEID                .37
                      01418      #define WRITE_FLASH_BLOCKSIZE   .8
                      01419      #define ERASE_FLASH_BLOCKSIZE   .64
                      01420      #define END_FLASH               0x3000
                      01421      #define END_GPR                 0x280
                      01422 #endif
                      01423 
                      01424 #ifdef __18F4450
                      01425      #define DEVICEID                .288
                      01426      #define WRITE_FLASH_BLOCKSIZE   .16
                      01427      #define ERASE_FLASH_BLOCKSIZE   .64
                      01428      #define END_FLASH               0x4000
                      01429      #define END_GPR                 0x500
                      01430 #endif
                      01431 
                      01432 #ifdef __18F4455
                      01433      #define DEVICEID                .145
                      01434      #define WRITE_FLASH_BLOCKSIZE   .32
                      01435      #define ERASE_FLASH_BLOCKSIZE   .64
                      01436      #define END_FLASH               0x6000
                      01437      #define END_GPR                 0x800
                      01438 #endif
                      01439 
                      01440 #ifdef __18F4458
                      01441      #define DEVICEID                .337
                      01442      #define WRITE_FLASH_BLOCKSIZE   .32
                      01443      #define ERASE_FLASH_BLOCKSIZE   .64
                      01444      #define END_FLASH               0x6000
                      01445      #define END_GPR                 0x800
                      01446 #endif
                      01447 
                      01448 #ifdef __18F4480
                      01449      #define DEVICEID                .213
                      01450      #define WRITE_FLASH_BLOCKSIZE   .32
                      01451      #define ERASE_FLASH_BLOCKSIZE   .64
                      01452      #define END_FLASH               0x4000
                      01453      #define END_GPR                 0x300
                      01454 #endif
                      01455 
                      01456 #ifdef __18F4510
                      01457      #define DEVICEID                .133
                      01458      #define WRITE_FLASH_BLOCKSIZE   .32
                      01459      #define ERASE_FLASH_BLOCKSIZE   .64
                      01460      #define END_FLASH               0x8000
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01461      #define END_GPR                 0x600
                      01462 #endif
                      01463 
                      01464 #ifdef __18F4515
                      01465      #define DEVICEID                .99
                      01466      #define WRITE_FLASH_BLOCKSIZE   .64
                      01467      #define ERASE_FLASH_BLOCKSIZE   .64
                      01468      #define END_FLASH               0xC000
                      01469      #define END_GPR                 0xF80
                      01470 #endif
                      01471 
                      01472 #ifdef __18F4520
                      01473      #define DEVICEID                .132
                      01474      #define WRITE_FLASH_BLOCKSIZE   .32
                      01475      #define ERASE_FLASH_BLOCKSIZE   .64
                      01476      #define END_FLASH               0x8000
                      01477      #define END_GPR                 0x600
                      01478 #endif
                      01479 
                      01480 #ifdef __18F4523
                      01481      #define DEVICEID                .265
                      01482      #define WRITE_FLASH_BLOCKSIZE   .32
                      01483      #define ERASE_FLASH_BLOCKSIZE   .64
                      01484      #define END_FLASH               0x8000
                      01485      #define END_GPR                 0x600
                      01486 #endif
                      01487 
                      01488 #ifdef __18F4525
                      01489      #define DEVICEID                .98
                      01490      #define WRITE_FLASH_BLOCKSIZE   .64
                      01491      #define ERASE_FLASH_BLOCKSIZE   .64
                      01492      #define END_FLASH               0xC000
                      01493      #define END_GPR                 0xF80
                      01494 #endif
                      01495 
                      01496 #ifdef __18F4539
                      01497      #define DEVICEID                .33
                      01498      #define WRITE_FLASH_BLOCKSIZE   .8
                      01499      #define ERASE_FLASH_BLOCKSIZE   .64
                      01500      #define END_FLASH               0x6000
                      01501      #define END_GPR                 0x580
                      01502 #endif
                      01503 
                      01504 #ifdef __18F4550
                      01505      #define DEVICEID                .144
                      01506      #define WRITE_FLASH_BLOCKSIZE   .32
                      01507      #define ERASE_FLASH_BLOCKSIZE   .64
                      01508      #define END_FLASH               0x8000
                      01509      #define END_GPR                 0x800
                      01510 #endif
                      01511 
                      01512 #ifdef __18F4553
                      01513      #define DEVICEID                .336
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01514      #define WRITE_FLASH_BLOCKSIZE   .32
                      01515      #define ERASE_FLASH_BLOCKSIZE   .64
                      01516      #define END_FLASH               0x8000
                      01517      #define END_GPR                 0x800
                      01518 #endif
                      01519 
                      01520 #ifdef __18F4580
                      01521      #define DEVICEID                .212
                      01522      #define WRITE_FLASH_BLOCKSIZE   .32
                      01523      #define ERASE_FLASH_BLOCKSIZE   .64
                      01524      #define END_FLASH               0x8000
                      01525      #define END_GPR                 0x600
                      01526 #endif
                      01527 
                      01528 #ifdef __18F4585
                      01529      #define DEVICEID                .117
                      01530      #define WRITE_FLASH_BLOCKSIZE   .64
                      01531      #define ERASE_FLASH_BLOCKSIZE   .64
                      01532      #define END_FLASH               0xC000
                      01533      #define END_GPR                 0xD00
                      01534 #endif
                      01535 
                      01536 #ifdef __18F4610
                      01537      #define DEVICEID                .97
                      01538      #define WRITE_FLASH_BLOCKSIZE   .64
                      01539      #define ERASE_FLASH_BLOCKSIZE   .64
                      01540      #define END_FLASH               0x10000
                      01541      #define END_GPR                 0xF80
                      01542 #endif
                      01543 
                      01544 #ifdef __18F4620
                      01545      #define DEVICEID                .96
                      01546      #define WRITE_FLASH_BLOCKSIZE   .64
                      01547      #define ERASE_FLASH_BLOCKSIZE   .64
                      01548      #define END_FLASH               0x10000
                      01549      #define END_GPR                 0xF80
                      01550 #endif
                      01551 
                      01552 #ifdef __18F4680
                      01553      #define DEVICEID                .116
                      01554      #define WRITE_FLASH_BLOCKSIZE   .64
                      01555      #define ERASE_FLASH_BLOCKSIZE   .64
                      01556      #define END_FLASH               0x10000
                      01557      #define END_GPR                 0xD00
                      01558 #endif
                      01559 
                      01560 #ifdef __18F4682
                      01561      #define DEVICEID                .314
                      01562      #define WRITE_FLASH_BLOCKSIZE   .64
                      01563      #define ERASE_FLASH_BLOCKSIZE   .64
                      01564      #define END_FLASH               0x14000
                      01565      #define END_GPR                 0xD00
                      01566 #endif
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01567 
                      01568 #ifdef __18F4685
                      01569      #define DEVICEID                .315
                      01570      #define WRITE_FLASH_BLOCKSIZE   .64
                      01571      #define ERASE_FLASH_BLOCKSIZE   .64
                      01572      #define END_FLASH               0x18000
                      01573      #define END_GPR                 0xD00
                      01574 #endif
                      01575 
                      01576 ; PIC18F6310 does not support self-programming.
                      01577 ; PIC18F6390 does not support self-programming.
                      01578 ; PIC18F6393 does not support self-programming.
                      01579 ; PIC18F6410 does not support self-programming.
                      01580 ; PIC18F6490 does not support self-programming.
                      01581 ; PIC18F6493 does not support self-programming.
                      01582 #ifdef __18F6520
                      01583      #define DEVICEID                .89
                      01584      #define WRITE_FLASH_BLOCKSIZE   .8
                      01585      #define ERASE_FLASH_BLOCKSIZE   .64
                      01586      #define END_FLASH               0x8000
                      01587      #define END_GPR                 0x800
                      01588 #endif
                      01589 
                      01590 #ifdef __18F6525
                      01591      #define DEVICEID                .87
                      01592      #define WRITE_FLASH_BLOCKSIZE   .8
                      01593      #define ERASE_FLASH_BLOCKSIZE   .64
                      01594      #define END_FLASH               0xC000
                      01595      #define END_GPR                 0xF00
                      01596 #endif
                      01597 
                      01598 #ifdef __18F6527
                      01599      #define DEVICEID                .154
                      01600      #define WRITE_FLASH_BLOCKSIZE   .64
                      01601      #define ERASE_FLASH_BLOCKSIZE   .64
                      01602      #define END_FLASH               0xC000
                      01603      #define END_GPR                 0xF60
                      01604 #endif
                      01605 
                      01606 #ifdef __18F6585
                      01607      #define DEVICEID                .83
                      01608      #define WRITE_FLASH_BLOCKSIZE   .8
                      01609      #define ERASE_FLASH_BLOCKSIZE   .64
                      01610      #define END_FLASH               0xC000
                      01611      #define END_GPR                 0xD00
                      01612 #endif
                      01613 
                      01614 #ifdef __18F6620
                      01615      #define DEVICEID                .51
                      01616      #define WRITE_FLASH_BLOCKSIZE   .8
                      01617      #define ERASE_FLASH_BLOCKSIZE   .64
                      01618      #define END_FLASH               0x10000
                      01619      #define END_GPR                 0xF00
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01620 #endif
                      01621 
                      01622 #ifdef __18F6621
                      01623      #define DEVICEID                .85
                      01624      #define WRITE_FLASH_BLOCKSIZE   .8
                      01625      #define ERASE_FLASH_BLOCKSIZE   .64
                      01626      #define END_FLASH               0x10000
                      01627      #define END_GPR                 0xF00
                      01628 #endif
                      01629 
                      01630 #ifdef __18F6622
                      01631      #define DEVICEID                .156
                      01632      #define WRITE_FLASH_BLOCKSIZE   .64
                      01633      #define ERASE_FLASH_BLOCKSIZE   .64
                      01634      #define END_FLASH               0x10000
                      01635      #define END_GPR                 0xF60
                      01636 #endif
                      01637 
                      01638 #ifdef __18F6627
                      01639      #define DEVICEID                .158
                      01640      #define WRITE_FLASH_BLOCKSIZE   .64
                      01641      #define ERASE_FLASH_BLOCKSIZE   .64
                      01642      #define END_FLASH               0x18000
                      01643      #define END_GPR                 0xF60
                      01644 #endif
                      01645 
                      01646 #ifdef __18F6628
                      01647      #define DEVICEID                .590
                      01648      #define WRITE_FLASH_BLOCKSIZE   .64
                      01649      #define ERASE_FLASH_BLOCKSIZE   .64
                      01650      #define END_FLASH               0x18000
                      01651      #define END_GPR                 0xF60
                      01652 #endif
                      01653 
                      01654 #ifdef __18F6680
                      01655      #define DEVICEID                .81
                      01656      #define WRITE_FLASH_BLOCKSIZE   .8
                      01657      #define ERASE_FLASH_BLOCKSIZE   .64
                      01658      #define END_FLASH               0x10000
                      01659      #define END_GPR                 0xD00
                      01660 #endif
                      01661 
                      01662 #ifdef __18F6720
                      01663      #define DEVICEID                .49
                      01664      #define WRITE_FLASH_BLOCKSIZE   .8
                      01665      #define ERASE_FLASH_BLOCKSIZE   .64
                      01666      #define END_FLASH               0x20000
                      01667      #define END_GPR                 0xF00
                      01668 #endif
                      01669 
                      01670 #ifdef __18F6722
                      01671      #define DEVICEID                .160
                      01672      #define WRITE_FLASH_BLOCKSIZE   .64
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01673      #define ERASE_FLASH_BLOCKSIZE   .64
                      01674      #define END_FLASH               0x20000
                      01675      #define END_GPR                 0xF60
                      01676 #endif
                      01677 
                      01678 #ifdef __18F6723
                      01679      #define DEVICEID                .592
                      01680      #define WRITE_FLASH_BLOCKSIZE   .64
                      01681      #define ERASE_FLASH_BLOCKSIZE   .64
                      01682      #define END_FLASH               0x20000
                      01683      #define END_GPR                 0xF60
                      01684 #endif
                      01685 
                      01686 ; PIC18F8310 does not support self-programming.
                      01687 ; PIC18F8390 does not support self-programming.
                      01688 ; PIC18F8393 does not support self-programming.
                      01689 ; PIC18F8410 does not support self-programming.
                      01690 ; PIC18F8490 does not support self-programming.
                      01691 ; PIC18F8493 does not support self-programming.
                      01692 #ifdef __18F8520
                      01693      #define DEVICEID                .88
                      01694      #define WRITE_FLASH_BLOCKSIZE   .8
                      01695      #define ERASE_FLASH_BLOCKSIZE   .64
                      01696      #define END_FLASH               0x8000
                      01697      #define END_GPR                 0x800
                      01698 #endif
                      01699 
                      01700 #ifdef __18F8525
                      01701      #define DEVICEID                .86
                      01702      #define WRITE_FLASH_BLOCKSIZE   .8
                      01703      #define ERASE_FLASH_BLOCKSIZE   .64
                      01704      #define END_FLASH               0xC000
                      01705      #define END_GPR                 0xF00
                      01706 #endif
                      01707 
                      01708 #ifdef __18F8527
                      01709      #define DEVICEID                .155
                      01710      #define WRITE_FLASH_BLOCKSIZE   .64
                      01711      #define ERASE_FLASH_BLOCKSIZE   .64
                      01712      #define END_FLASH               0xC000
                      01713      #define END_GPR                 0xF60
                      01714 #endif
                      01715 
                      01716 #ifdef __18F8585
                      01717      #define DEVICEID                .82
                      01718      #define WRITE_FLASH_BLOCKSIZE   .8
                      01719      #define ERASE_FLASH_BLOCKSIZE   .64
                      01720      #define END_FLASH               0xC000
                      01721      #define END_GPR                 0xD00
                      01722 #endif
                      01723 
                      01724 #ifdef __18F8620
                      01725      #define DEVICEID                .50
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01726      #define WRITE_FLASH_BLOCKSIZE   .8
                      01727      #define ERASE_FLASH_BLOCKSIZE   .64
                      01728      #define END_FLASH               0x10000
                      01729      #define END_GPR                 0xF00
                      01730 #endif
                      01731 
                      01732 #ifdef __18F8621
                      01733      #define DEVICEID                .84
                      01734      #define WRITE_FLASH_BLOCKSIZE   .8
                      01735      #define ERASE_FLASH_BLOCKSIZE   .64
                      01736      #define END_FLASH               0x10000
                      01737      #define END_GPR                 0xF00
                      01738 #endif
                      01739 
                      01740 #ifdef __18F8622
                      01741      #define DEVICEID                .157
                      01742      #define WRITE_FLASH_BLOCKSIZE   .64
                      01743      #define ERASE_FLASH_BLOCKSIZE   .64
                      01744      #define END_FLASH               0x10000
                      01745      #define END_GPR                 0xF60
                      01746 #endif
                      01747 
                      01748 #ifdef __18F8627
                      01749      #define DEVICEID                .159
                      01750      #define WRITE_FLASH_BLOCKSIZE   .64
                      01751      #define ERASE_FLASH_BLOCKSIZE   .64
                      01752      #define END_FLASH               0x18000
                      01753      #define END_GPR                 0xF60
                      01754 #endif
                      01755 
                      01756 #ifdef __18F8628
                      01757      #define DEVICEID                .591
                      01758      #define WRITE_FLASH_BLOCKSIZE   .64
                      01759      #define ERASE_FLASH_BLOCKSIZE   .64
                      01760      #define END_FLASH               0x18000
                      01761      #define END_GPR                 0xF60
                      01762 #endif
                      01763 
                      01764 #ifdef __18F8680
                      01765      #define DEVICEID                .80
                      01766      #define WRITE_FLASH_BLOCKSIZE   .8
                      01767      #define ERASE_FLASH_BLOCKSIZE   .64
                      01768      #define END_FLASH               0x10000
                      01769      #define END_GPR                 0xD00
                      01770 #endif
                      01771 
                      01772 #ifdef __18F8720
                      01773      #define DEVICEID                .48
                      01774      #define WRITE_FLASH_BLOCKSIZE   .8
                      01775      #define ERASE_FLASH_BLOCKSIZE   .64
                      01776      #define END_FLASH               0x20000
                      01777      #define END_GPR                 0xF00
                      01778 #endif
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01779 
                      01780 #ifdef __18F8722
                      01781      #define DEVICEID                .161
                      01782      #define WRITE_FLASH_BLOCKSIZE   .64
                      01783      #define ERASE_FLASH_BLOCKSIZE   .64
                      01784      #define END_FLASH               0x20000
                      01785      #define END_GPR                 0xF60
                      01786 #endif
                      01787 
                      01788 #ifdef __18F8723
                      01789      #define DEVICEID                .593
                      01790      #define WRITE_FLASH_BLOCKSIZE   .64
                      01791      #define ERASE_FLASH_BLOCKSIZE   .64
                      01792      #define END_FLASH               0x20000
                      01793      #define END_GPR                 0xF60
                      01794 #endif
                      01795 
                      01796 #ifdef __18LF13K22
                      01797      #define DEVICEID                .636
                      01798      #define WRITE_FLASH_BLOCKSIZE   .8
                      01799      #define ERASE_FLASH_BLOCKSIZE   .64
                      01800      #define END_FLASH               0x2000
                      01801      #define END_GPR                 0x100
                      01802 #endif
                      01803 
                      01804 #ifdef __18LF13K50
                      01805      #define DEVICEID                .568
                      01806      #define WRITE_FLASH_BLOCKSIZE   .8
                      01807      #define ERASE_FLASH_BLOCKSIZE   .64
                      01808      #define END_FLASH               0x2000
                      01809      #define END_GPR                 0x300
                      01810 #endif
                      01811 
                      01812 #ifdef __18LF14K22
                      01813      #define DEVICEID                .635
                      01814      #define WRITE_FLASH_BLOCKSIZE   .16
                      01815      #define ERASE_FLASH_BLOCKSIZE   .64
                      01816      #define END_FLASH               0x4000
                      01817      #define END_GPR                 0x200
                      01818 #endif
                      01819 
                      01820 #ifdef __18LF14K50
                      01821      #define DEVICEID                .569
                      01822      #define WRITE_FLASH_BLOCKSIZE   .16
                      01823      #define ERASE_FLASH_BLOCKSIZE   .64
                      01824      #define END_FLASH               0x4000
                      01825      #define END_GPR                 0x300
                      01826 #endif
                      01827 
                      01828 #ifdef __18LF23K22
                      01829      #define DEVICEID                .699
                      01830      #define WRITE_FLASH_BLOCKSIZE   .64
                      01831      #define ERASE_FLASH_BLOCKSIZE   .64
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01832      #define END_FLASH               0x2000
                      01833      #define END_GPR                 0x200
                      01834 #endif
                      01835 
                      01836 #ifdef __18LF24J10
                      01837      #define CONFIG_AS_FLASH
                      01838      #define DEVICEID                .234
                      01839      #define WRITE_FLASH_BLOCKSIZE   .64
                      01840      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01841      #define END_FLASH               0x4000
                      01842      #define END_GPR                 0x400
                      01843 #endif
                      01844 
                      01845 #ifdef __18LF24J11
                      01846      #define CONFIG_AS_FLASH
                      01847      #define DEVICEID                .626
                      01848      #define WRITE_FLASH_BLOCKSIZE   .64
                      01849      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01850      #define END_FLASH               0x4000
                      01851      #define END_GPR                 0xEC0
                      01852 #endif
                      01853 
                      01854 #ifdef __18LF24J50
                      01855      #define CONFIG_AS_FLASH
                      01856      #define DEVICEID                .614
                      01857      #define WRITE_FLASH_BLOCKSIZE   .64
                      01858      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01859      #define END_FLASH               0x4000
                      01860      #define END_GPR                 0xEC0
                      01861 #endif
                      01862 
                      01863 #ifdef __18LF24K22
                      01864      #define DEVICEID                .691
                      01865      #define WRITE_FLASH_BLOCKSIZE   .64
                      01866      #define ERASE_FLASH_BLOCKSIZE   .64
                      01867      #define END_FLASH               0x4000
                      01868      #define END_GPR                 0x300
                      01869 #endif
                      01870 
                      01871 #ifdef __18LF25J10
                      01872      #define CONFIG_AS_FLASH
                      01873      #define DEVICEID                .226
                      01874      #define WRITE_FLASH_BLOCKSIZE   .64
                      01875      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01876      #define END_FLASH               0x8000
                      01877      #define END_GPR                 0x400
                      01878 #endif
                      01879 
                      01880 #ifdef __18LF25J11
                      01881      #define CONFIG_AS_FLASH
                      01882      #define DEVICEID                .627
                      01883      #define WRITE_FLASH_BLOCKSIZE   .64
                      01884      #define ERASE_FLASH_BLOCKSIZE   .1024
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01885      #define END_FLASH               0x8000
                      01886      #define END_GPR                 0xEC0
                      01887 #endif
                      01888 
                      01889 #ifdef __18LF25J50
                      01890      #define CONFIG_AS_FLASH
                      01891      #define DEVICEID                .615
                      01892      #define WRITE_FLASH_BLOCKSIZE   .64
                      01893      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01894      #define END_FLASH               0x8000
                      01895      #define END_GPR                 0xEC0
                      01896 #endif
                      01897 
                      01898 #ifdef __18LF25K22
                      01899      #define DEVICEID                .683
                      01900      #define WRITE_FLASH_BLOCKSIZE   .64
                      01901      #define ERASE_FLASH_BLOCKSIZE   .64
                      01902      #define END_FLASH               0x8000
                      01903      #define END_GPR                 0x600
                      01904 #endif
                      01905 
                      01906 #ifdef __18LF25K80
                      01907      #define DEVICEID                .787
                      01908      #define WRITE_FLASH_BLOCKSIZE   .64
                      01909      #define ERASE_FLASH_BLOCKSIZE   .64
                      01910      #define END_FLASH               0x8000
                      01911      #define END_GPR                 0xE41
                      01912 #endif
                      01913 
                      01914 #ifdef __18LF26J11
                      01915      #define CONFIG_AS_FLASH
                      01916      #define DEVICEID                .628
                      01917      #define WRITE_FLASH_BLOCKSIZE   .64
                      01918      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01919      #define END_FLASH               0x10000
                      01920      #define END_GPR                 0xEC0
                      01921 #endif
                      01922 
                      01923 #ifdef __18LF26J13
                      01924      #define CONFIG_AS_FLASH
                      01925      #define DEVICEID                .729
                      01926      #define WRITE_FLASH_BLOCKSIZE   .64
                      01927      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01928      #define END_FLASH               0x10000
                      01929      #define END_GPR                 0xEB0
                      01930 #endif
                      01931 
                      01932 #ifdef __18LF26J50
                      01933      #define CONFIG_AS_FLASH
                      01934      #define DEVICEID                .616
                      01935      #define WRITE_FLASH_BLOCKSIZE   .64
                      01936      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01937      #define END_FLASH               0x10000
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01938      #define END_GPR                 0xEC0
                      01939 #endif
                      01940 
                      01941 #ifdef __18LF26J53
                      01942      #define CONFIG_AS_FLASH
                      01943      #define DEVICEID                .721
                      01944      #define WRITE_FLASH_BLOCKSIZE   .64
                      01945      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01946      #define END_FLASH               0x10000
                      01947      #define END_GPR                 0xEB0
                      01948 #endif
                      01949 
                      01950 #ifdef __18LF26K22
                      01951      #define DEVICEID                .675
                      01952      #define WRITE_FLASH_BLOCKSIZE   .64
                      01953      #define ERASE_FLASH_BLOCKSIZE   .64
                      01954      #define END_FLASH               0x10000
                      01955      #define END_GPR                 0xF38
                      01956 #endif
                      01957 
                      01958 #ifdef __18LF26K80
                      01959      #define DEVICEID                .784
                      01960      #define WRITE_FLASH_BLOCKSIZE   .64
                      01961      #define ERASE_FLASH_BLOCKSIZE   .64
                      01962      #define END_FLASH               0x10000
                      01963      #define END_GPR                 0xE41
                      01964 #endif
                      01965 
                      01966 #ifdef __18LF27J13
                      01967      #define CONFIG_AS_FLASH
                      01968      #define DEVICEID                .731
                      01969      #define WRITE_FLASH_BLOCKSIZE   .64
                      01970      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01971      #define END_FLASH               0x20000
                      01972      #define END_GPR                 0xEB0
                      01973 #endif
                      01974 
                      01975 #ifdef __18LF27J53
                      01976      #define CONFIG_AS_FLASH
                      01977      #define DEVICEID                .723
                      01978      #define WRITE_FLASH_BLOCKSIZE   .64
                      01979      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01980      #define END_FLASH               0x20000
                      01981      #define END_GPR                 0xEB0
                      01982 #endif
                      01983 
                      01984 #ifdef __18LF43K22
                      01985      #define DEVICEID                .697
                      01986      #define WRITE_FLASH_BLOCKSIZE   .64
                      01987      #define ERASE_FLASH_BLOCKSIZE   .64
                      01988      #define END_FLASH               0x2000
                      01989      #define END_GPR                 0x200
                      01990 #endif
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01991 
                      01992 #ifdef __18LF44J10
                      01993      #define CONFIG_AS_FLASH
                      01994      #define DEVICEID                .235
                      01995      #define WRITE_FLASH_BLOCKSIZE   .64
                      01996      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01997      #define END_FLASH               0x4000
                      01998      #define END_GPR                 0x400
                      01999 #endif
                      02000 
                      02001 #ifdef __18LF44J11
                      02002      #define CONFIG_AS_FLASH
                      02003      #define DEVICEID                .629
                      02004      #define WRITE_FLASH_BLOCKSIZE   .64
                      02005      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02006      #define END_FLASH               0x4000
                      02007      #define END_GPR                 0xEC0
                      02008 #endif
                      02009 
                      02010 #ifdef __18LF44J50
                      02011      #define CONFIG_AS_FLASH
                      02012      #define DEVICEID                .617
                      02013      #define WRITE_FLASH_BLOCKSIZE   .64
                      02014      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02015      #define END_FLASH               0x4000
                      02016      #define END_GPR                 0xEC0
                      02017 #endif
                      02018 
                      02019 #ifdef __18LF44K22
                      02020      #define DEVICEID                .689
                      02021      #define WRITE_FLASH_BLOCKSIZE   .64
                      02022      #define ERASE_FLASH_BLOCKSIZE   .64
                      02023      #define END_FLASH               0x4000
                      02024      #define END_GPR                 0x300
                      02025 #endif
                      02026 
                      02027 #ifdef __18LF45J10
                      02028      #define CONFIG_AS_FLASH
                      02029      #define DEVICEID                .227
                      02030      #define WRITE_FLASH_BLOCKSIZE   .64
                      02031      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02032      #define END_FLASH               0x8000
                      02033      #define END_GPR                 0x400
                      02034 #endif
                      02035 
                      02036 #ifdef __18LF45J11
                      02037      #define CONFIG_AS_FLASH
                      02038      #define DEVICEID                .630
                      02039      #define WRITE_FLASH_BLOCKSIZE   .64
                      02040      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02041      #define END_FLASH               0x8000
                      02042      #define END_GPR                 0xEC0
                      02043 #endif
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02044 
                      02045 #ifdef __18LF45J50
                      02046      #define CONFIG_AS_FLASH
                      02047      #define DEVICEID                .618
                      02048      #define WRITE_FLASH_BLOCKSIZE   .64
                      02049      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02050      #define END_FLASH               0x8000
                      02051      #define END_GPR                 0xEC0
                      02052 #endif
                      02053 
                      02054 #ifdef __18LF45K22
                      02055      #define DEVICEID                .681
                      02056      #define WRITE_FLASH_BLOCKSIZE   .64
                      02057      #define ERASE_FLASH_BLOCKSIZE   .64
                      02058      #define END_FLASH               0x8000
                      02059      #define END_GPR                 0x600
                      02060 #endif
                      02061 
                      02062 #ifdef __18LF45K80
                      02063      #define DEVICEID                .786
                      02064      #define WRITE_FLASH_BLOCKSIZE   .64
                      02065      #define ERASE_FLASH_BLOCKSIZE   .64
                      02066      #define END_FLASH               0x8000
                      02067      #define END_GPR                 0xE41
                      02068 #endif
                      02069 
                      02070 #ifdef __18LF46J11
                      02071      #define CONFIG_AS_FLASH
                      02072      #define DEVICEID                .631
                      02073      #define WRITE_FLASH_BLOCKSIZE   .64
                      02074      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02075      #define END_FLASH               0x10000
                      02076      #define END_GPR                 0xEC0
                      02077 #endif
                      02078 
                      02079 #ifdef __18LF46J13
                      02080      #define CONFIG_AS_FLASH
                      02081      #define DEVICEID                .733
                      02082      #define WRITE_FLASH_BLOCKSIZE   .64
                      02083      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02084      #define END_FLASH               0x10000
                      02085      #define END_GPR                 0xEB0
                      02086 #endif
                      02087 
                      02088 #ifdef __18LF46J50
                      02089      #define CONFIG_AS_FLASH
                      02090      #define DEVICEID                .619
                      02091      #define WRITE_FLASH_BLOCKSIZE   .64
                      02092      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02093      #define END_FLASH               0x10000
                      02094      #define END_GPR                 0xEC0
                      02095 #endif
                      02096 
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02097 #ifdef __18LF46J53
                      02098      #define CONFIG_AS_FLASH
                      02099      #define DEVICEID                .725
                      02100      #define WRITE_FLASH_BLOCKSIZE   .64
                      02101      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02102      #define END_FLASH               0x10000
                      02103      #define END_GPR                 0xEB0
                      02104 #endif
                      02105 
                      02106 #ifdef __18LF46K22
                      02107      #define DEVICEID                .673
                      02108      #define WRITE_FLASH_BLOCKSIZE   .64
                      02109      #define ERASE_FLASH_BLOCKSIZE   .64
                      02110      #define END_FLASH               0x10000
                      02111      #define END_GPR                 0xF38
                      02112 #endif
                      02113 
                      02114 #ifdef __18LF46K80
                      02115      #define DEVICEID                .783
                      02116      #define WRITE_FLASH_BLOCKSIZE   .64
                      02117      #define ERASE_FLASH_BLOCKSIZE   .64
                      02118      #define END_FLASH               0x10000
                      02119      #define END_GPR                 0xE41
                      02120 #endif
                      02121 
                      02122 #ifdef __18LF47J13
                      02123      #define CONFIG_AS_FLASH
                      02124      #define DEVICEID                .735
                      02125      #define WRITE_FLASH_BLOCKSIZE   .64
                      02126      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02127      #define END_FLASH               0x20000
                      02128      #define END_GPR                 0xEB0
                      02129 #endif
                      02130 
                      02131 #ifdef __18LF47J53
                      02132      #define CONFIG_AS_FLASH
                      02133      #define DEVICEID                .727
                      02134      #define WRITE_FLASH_BLOCKSIZE   .64
                      02135      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02136      #define END_FLASH               0x20000
                      02137      #define END_GPR                 0xEB0
                      02138 #endif
                      02139 
                      02140 #ifdef __18LF65K80
                      02141      #define DEVICEID                .785
                      02142      #define WRITE_FLASH_BLOCKSIZE   .64
                      02143      #define ERASE_FLASH_BLOCKSIZE   .64
                      02144      #define END_FLASH               0x8000
                      02145      #define END_GPR                 0xE41
                      02146 #endif
                      02147 
                      02148 #ifdef __18LF66K80
                      02149      #define DEVICEID                .782
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02150      #define WRITE_FLASH_BLOCKSIZE   .64
                      02151      #define ERASE_FLASH_BLOCKSIZE   .64
                      02152      #define END_FLASH               0x10000
                      02153      #define END_GPR                 0xE41
                      02154 #endif
                      00110 #include "bootconfig.inc"
                      00001 ; Copyright (c) 2002-2011,  Microchip Technology Inc.
                      00002 ;
                      00003 ; Microchip licenses this software to you solely for use with Microchip
                      00004 ; products.  The software is owned by Microchip and its licensors, and
                      00005 ; is protected under applicable copyright laws.  All rights reserved.
                      00006 ;
                      00007 ; SOFTWARE IS PROVIDED "AS IS."  MICROCHIP EXPRESSLY DISCLAIMS ANY
                      00008 ; WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT
                      00009 ; NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
                      00010 ; FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL
                      00011 ; MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
                      00012 ; CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, HARM TO YOUR
                      00013 ; EQUIPMENT, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY
                      00014 ; OR SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED
                      00015 ; TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION,
                      00016 ; OR OTHER SIMILAR COSTS.
                      00017 ;
                      00018 ; To the fullest extent allowed by law, Microchip and its licensors
                      00019 ; liability shall not exceed the amount of fees, if any, that you
                      00020 ; have paid directly to Microchip to use this software.
                      00021 ;
                      00022 ; MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE
                      00023 ; OF THESE TERMS.
                      00024 
                      00025 ;#define TBLWT_BUG               ; Enable this to work around timing bug found in some PIC18Fxx20's
                      00026 ;#define INVERT_UART             ; If you don't have an RS232 transceiver, you might want this option
                      00027 #define USE_MAX_INTOSC          ; Sets OSCCON<IRCF2:IRCF0> for maximum INTOSC frequency (8MHz)
                      00028 ;#define USE_PLL                 ; Sets OSCTUNE.PLLEN bit at start up for frequency multiplication.
                      00029 ;#define PICDEM_LCD2             ; RB0 = 1 required to enable MAX3221 TX output on PICDEM LCD 2 demo boa
                            rd
                      00030 #define USE_SOFTBOOTWP          ; enable software boot block write protection
                      00031 #define USE_SOFTCONFIGWP        ; enable software config words write protection
                      00032 
                      00033 ; Autobaud will be used by default. To save code space or to force a specific baud rate to be used, 
                      00034 ; you can optionally define a BAUDRG value instead. Most PIC18's support BRG16 mode and use the 
                      00035 ; following equation:
                      00036 ;       BAUDRG = Fosc / (4 * Baud Rate) - 1
                      00037 ;
                      00038 ; Old PIC18's without BRG16 mode need this equation instead:
                      00039 ;       BAUDRG = Fosc / (16 * Baud Rate) - 1
                      00040 ;
                      00041 ; Examples:
                      00042 ;#define BAUDRG .51              ; 19.2Kbps from 4MHz (BRG16 = 1, BRGH = 1)
                      00043 ;#define BAUDRG .103             ; 115.2Kbps from 48MHz (BRG16 = 1, BRGH = 1)
                      00044 ;#define BAUDRG .85              ; 115.2Kbps from 40MHz (BRG16 = 1, BRGH = 1)
                      00045 ;#define BAUDRG .68              ; 115.2Kbps from 32MHz (BRG16 = 1, BRGH = 1)
                      00046 ;#define BAUDRG .16              ; 115.2Kbps from 8MHz (BRG16 = 1, BRGH = 1)
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00047 ;#define BAUDRG .11              ; 1Mbps from 48MHz (BRG16 = 1, BRGH = 1)
                      00048 ;#define BAUDRG .9               ; 1Mbps from 40MHz (BRG16 = 1, BRGH = 1)
                      00049 ;#define BAUDRG .4               ; 2Mbps from 40MHz (BRG16 = 1, BRGH = 1)
                      00050 ;#define BAUDRG .3               ; 3Mbps from 48MHz (BRG16 = 1, BRGH = 1)
                      00051 ;#define BAUDRG .12              ; 19.2Kbps from 4MHz, 115.2Kbps from 24MHz (BRG16 = 0, BRGH = 1)
                      00052 ;#define BAUDRG .10              ; 115.2Kbps from 19.6608MHz (BRG16 = 0, BRGH = 1)
                      00053 
                      00054 ; Bootloader must start at the beginning of a FLASH Erase Block. If unspecified,
                      00055 ; bootloader will automatically be located at the end of program memory address space.
                      00056 #define BOOTLOADER_ADDRESS   0  ; bootloader at beginning, application start/ISR vectors require remappi
                            ng
                      00057 ;#define BOOTLOADER_ADDRESS   END_FLASH - (ERASE_FLASH_BLOCKSIZE * 20)  ; useful for running under debug
                            ger (debug executive wants to reside at the end of memory space too)
                      00058 ;#define BOOTLOADER_ADDRESS  (END_FLASH - ERASE_FLASH_BLOCKSIZE) ; use on J parts to locate inside flash
                             config erase block
                      00059 
                      00060 #ifdef BOOTLOADER_ADDRESS
                      00061   #if BOOTLOADER_ADDRESS == 0
                      00062     ; For Bootloader located at program memory address 0, the application firmware must 
                      00063     ; provide remapped reset and interrupt vectors outside of the Boot Block. The following 
                      00064     ; #defines tell the bootloader firmware where application entry points are to be expected:
                      00065     #define AppVector           0x800   ; application start up code should be located here.
                      00066     #define AppHighIntVector    0x808   ; application high priority interrupt should be located here
                      00067     #define AppLowIntVector     0x818   ; application low priority interrupt should be located here
                      00068   #endif
                      00069 #endif
                      00070 
                      00071 ; Define UART pins and registers. 
                      00072 ; Modify the following lines if you want to use a different UART module.
                      00073 ;
                      00074 ; Note: If your UART's RX pin happens to be multiplexed with analog ANx input
                      00075 ;       functionality, you may need to edit the "preprocess.inc" DigitalInput
                      00076 ;       macro. Code there needs to enable the digital input buffer (refer to
                      00077 ;       ADC chapter of your device's datasheet).
                      00078 #define UARTNUM 1
                      00079 #if UARTNUM == 1
                      00080     #define UxSPBRG         SPBRG
                      00081     #define UxSPBRGH        SPBRGH
                      00082     #define UxRCSTA         RCSTA
                      00083     #define UxTXSTA         TXSTA
                      00084     #define UxRCREG         RCREG
                      00085     #define UxTXREG         TXREG
                      00086     #define UxPIR           PIR1
                      00087     #define UxRCIF          RCIF
                      00088     #define UxTXIF          TXIF
                      00089     #define UxBAUDCON       BAUDCON
                      00090 
                      00091 ;    #define RXPORT         PORTC   ; RX on RC7 is used by default for most PIC18's.
                      00092 ;    #define RXPIN          .7
                      00093 
                      00094 ;    #define RXPORT          PORTB   ; PIC18F14K50: RX on RB5/AN11
                      00095 ;    #define RXPIN           .5
                      00096 
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;    #define RXANSEL         ANSELH  ; RX/AN11 multiplexed -- must enable digital input buffer
                      00098 ;    #define RXAN            .3      ; ANSELH<3> controls AN11 digital input buffer
                      00099 #endif
                      00100 
                      00101 #if UARTNUM == 2
                      00102     #define UxSPBRG         SPBRG2
                      00103     #define UxSPBRGH        SPBRGH2
                      00104     #define UxRCSTA         RCSTA2
                      00105     #define UxTXSTA         TXSTA2
                      00106     #define UxRCREG         RCREG2
                      00107     #define UxTXREG         TXREG2
                      00108     #define UxPIR           PIR3
                      00109     #define UxRCIF          RC2IF
                      00110     #define UxTXIF          TX2IF
                      00111     #define UxBAUDCON       BAUDCON2
                      00112 
                      00113 ;    #define RXPORT          PORTG   ; RG2 is default RX2 pin for some high pin count PIC18's.
                      00114 ;    #define RXPIN           .2
                      00115 
                      00116 ;    #define RXPORT          PORTD   ; RX2 pin PPS'ed to RD4/RP21 on PIC18F46J11 for example.
                      00117 ;    #define RXPIN           .4
                      00118 
                      00119 ;    #define RXANSEL         ANSELH  ; On PICs where RX is multiplexed with ANx analog inputs,
                      00120 ;    #define RXAN            .3      ; the digital input buffer needs to be enabled via ANSELx SFRs
                      00121 
                      00122     ; devices that use PPS to remap UART2 pins will need these lines defined:
                      00123 ;    #define PPS_UTX         .5      ; PPS code for TX2/CK2 output function
                      00124 ;    #define PPS_UTX_PIN     RPOR23  ; UART TX assigned to RP23 pin
                      00125 ;    #define PPS_URX_PIN     .21     ; UART RX assigned to RP21 pin
                      00126 ;    #define PPS_URX         RPINR16 ; PPS register for RX2/CK2 input function
                      00127 #endif
                      00128 
                      00129 ; If you get linker errors complaining "can not fit the absolute section," you might want to
                      00130 ; increase BOOTLOADERSIZE below or set the BOOTLOADER_ADDRESS above to a smaller address number.
                      00131 
                      00132 ; Because we need to know the total size of the bootloader before the assembler has finished
                      00133 ; compiling the source code, we have to estimate the final bootloader size and provide it
                      00134 ; here as BOOTLOADERSIZE. This number is in bytes (twice the instruction word count). 
                      00135 ;
                      00136 ; If you see the bootloader is reserving more FLASH memory than it really needs (you'll
                      00137 ; see a bunch of FFFF/NOP instructions at the end of the bootloader memory region),
                      00138 ; you can try reducing BOOTLOADERSIZE.
                      00139 #define BOOTLOADERSIZE  .708
                      00140 
                      00141 #define MAJOR_VERSION   .1              ; Bootloader Firmware Version
                      00142 #define MINOR_VERSION   .5
                      00111 #include "preprocess.inc"
                      00001 ; Copyright (c) 2002-2011,  Microchip Technology Inc.
                      00002 ;
                      00003 ; Microchip licenses this software to you solely for use with Microchip
                      00004 ; products.  The software is owned by Microchip and its licensors, and
                      00005 ; is protected under applicable copyright laws.  All rights reserved.
                      00006 ;
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00007 ; SOFTWARE IS PROVIDED "AS IS."  MICROCHIP EXPRESSLY DISCLAIMS ANY
                      00008 ; WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT
                      00009 ; NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
                      00010 ; FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL
                      00011 ; MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
                      00012 ; CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, HARM TO YOUR
                      00013 ; EQUIPMENT, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY
                      00014 ; OR SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED
                      00015 ; TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION,
                      00016 ; OR OTHER SIMILAR COSTS.
                      00017 ;
                      00018 ; To the fullest extent allowed by law, Microchip and its licensors
                      00019 ; liability shall not exceed the amount of fees, if any, that you
                      00020 ; have paid directly to Microchip to use this software.
                      00021 ;
                      00022 ; MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE
                      00023 ; OF THESE TERMS.
                      00024 
                      00025 DigitalInput macro
                      00026 #ifdef __18F1320
                      00027     #if BOOTLOADER_ADDRESS == 0
                      00028     nop                         ; start up GOTO instruction errata
                      00029     #endif
                      00030     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                      00031 #endif
                      00032 #ifdef __18F1220
                      00033     #if BOOTLOADER_ADDRESS == 0
                      00034     nop                         ; start up GOTO instruction errata
                      00035     #endif
                      00036     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                      00037 #endif
                      00038 
                      00039 #ifdef RXANSEL
                      00040     banksel RXANSEL
                      00041     bcf     RXANSEL, RXAN
                      00042 #else
                      00043     #ifdef ANSC7
                      00044         banksel ANSELC          ; ANSELC is in non-access bank 0x0F on PIC18F46K22 family
                      00045         bcf     ANSELC, ANSC7   ; Digital input enable on RC7/RX pin for PIC18F46K22 family
                      00046     #endif
                      00047 #endif
                      00048     endm        
                      00049 
                      00050 pmwtpi macro                        ; tblwt*+ macro for PIC18Fxx20 bug
                      00051 #ifdef TBLWT_BUG
                      00052     tblwt   *
                      00053     tblrd   *+
                      00054 #else
                      00055     tblwt   *+
                      00056 #endif
                      00057     endm
                      00058 
                      00059 #ifndef BAUDRG
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00060     #ifndef USE_AUTOBAUD
                      00061         #define USE_AUTOBAUD
                      00062     #endif
                      00063 #endif
                      00064 
                      00065 #ifndef RXPORT
                      00066     #ifdef PORTC
                      00067         #define RXPORT PORTC
                      00068     #else
                      00069         #define RXPORT PORTB    ; PIC18F1220, PIC18F1320
                      00070     #endif
                      00071 #endif
                      00072 
                      00073 #ifndef RXPIN
                      00074     #ifdef PORTC
                      00075         #define RXPIN 7            ; most PIC18's have RX on RC7
                      00076     #else
                      00077         #define RXPIN 4            ; PIC18F1220, PIC18F1320 have RX on RB4
                      00078     #endif
                      00079 #endif
                      00080 
                      00081 #ifdef BRG16
                      00082     #ifndef SPBRGH
                      00083         #define SPBRGH SPBRGH1      ; PIC18F87J10 doesn't define SPBRGH by default.
                      00084     #endif
                      00085 
                      00086     #ifndef BAUDCON
                      00087         #ifdef BAUDCON1
                      00088             #define BAUDCON BAUDCON1    ; PIC18F85J90 / PIC18F84J90
                      00089         #else
                      00090             #ifdef BAUDCTL
                      00091                 #define BAUDCON BAUDCTL ; PIC18F1220, PIC18F1320
                      00092             #endif
                      00093         #endif
                      00094     #endif
                      00095 #endif
                      00096 
                      00097 #ifndef RCREG
                      00098     #ifdef RCREG1
                      00099         #define RCREG RCREG1        ; PIC18F85J90/PIC18F84J90
                      00100     #endif
                      00101 #endif
                      00102 
                      00103 #ifndef TXIF
                      00104     #ifdef TX1IF
                      00105         #define TXIF TX1IF          ; PIC18F97J60 doesn't define TXIF by default
                      00106     #endif
                      00107 #endif
                      00108 
                      00109 #ifndef RCIF
                      00110     #ifdef RC1IF
                      00111         #define RCIF RC1IF          ; Not a problem on PIC18F97J60, but just in case future parts might 
                            need it
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00112     #endif
                      00113 #endif
                      00114 
                      00115 #ifndef RXDTP
                      00116     #ifdef DTRXP
                      00117         #define RXDTP DTRXP         ; PIC18F14K50 doesn't define RXDTP, instead they call it DTRXP
                      00118     #endif
                      00119 #endif
                      00120 
                      00121 #ifndef TXCKP
                      00122     #ifdef CKTXP
                      00123         #define TXCKP CKTXP         ; PIC18F14K50
                      00124     #endif
                      00125 #endif
                      00126 
                      00127 
                      00128 #if BOOTLOADERSIZE < ERASE_FLASH_BLOCKSIZE
                      00129     ; This device has a large Erase FLASH Block Size, so we need to reserve a full Erase Block
                      00130     ; page for the bootloader. Reserving an entire erase block prevents the PC application
                      00131     ; from trying to accidently erase a portion of the bootloader.
                      00132     #define BOOTBLOCKSIZE ERASE_FLASH_BLOCKSIZE
                      00133     #ifndef BOOTLOADER_ADDRESS
                      00134         #ifdef CONFIG_AS_FLASH
                      00135             #define BOOTLOADER_ADDRESS  (END_FLASH - BOOTBLOCKSIZE - ERASE_FLASH_BLOCKSIZE)
                      00136         #else
                      00137             #define BOOTLOADER_ADDRESS  (END_FLASH - BOOTBLOCKSIZE)
                      00138         #endif
                      00139     #endif
                      00140 #else
                      00141     #if (BOOTLOADERSIZE % ERASE_FLASH_BLOCKSIZE) == 0
                      00142         #define BOOTBLOCKSIZE BOOTLOADERSIZE     
                      00143     #else
                      00144         #define BOOTBLOCKSIZE (BOOTLOADERSIZE / ERASE_FLASH_BLOCKSIZE + 1) * ERASE_FLASH_BLOCKSIZE
                      00145     #endif
                      00146     #ifndef BOOTLOADER_ADDRESS
                      00147         #define BOOTLOADER_ADDRESS  (END_FLASH - BOOTBLOCKSIZE)
                      00148     #endif
                      00149 #endif
                      00112 ; *****************************************************************************
                      00113 ; *****************************************************************************
                      00114 ; PIC18F6620 Configuration Bit Settings
                      00115 ; CONFIG1H
25 0E 0E 83 03 81 FF C00116   CONFIG  OSC = ECIO            ; Oscillator Selection bits (EC oscillator w/ OSC2 configured as RA6)
       0 FF E0 FF 40 
                      00117   CONFIG  OSCS = OFF            ; Oscillator System Clock Switch Enable bit (Oscillator system clock swi
                            tch option is disabled (main oscillator is source))
                      00118 
                      00119 ; CONFIG2L
                      00120   CONFIG  PWRT = ON             ; Power-up Timer Enable bit (PWRT enabled)
                      00121   CONFIG  BOR = ON              ; Brown-out Reset Enable bit (Brown-out Reset enabled)
                      00122   CONFIG  BORV = 25             ; Brown-out Reset Voltage bits (VBOR set to 2.5V)
                      00123 
                      00124 ; CONFIG2H
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00125   CONFIG  WDT = OFF             ; Watchdog Timer Enable bit (WDT disabled (control is placed on the SWDT
                            EN bit))
                      00126   CONFIG  WDTPS = 128           ; Watchdog Timer Postscale Select bits (1:128)
                      00127 
                      00128 ; CONFIG3L
                      00129 
                      00130 ; CONFIG3H
                      00131   CONFIG  CCP2MUX = ON          ; CCP2 Mux bit (CCP2 input/output is multiplexed with RC1)
                      00132 
                      00133 ; CONFIG4L
                      00134   CONFIG  STVR = ON             ; Stack Full/Underflow Reset Enable bit (Stack full/underflow will cause
                             Reset)
                      00135   CONFIG  LVP = OFF             ; Low-Voltage ICSP Enable bit (Low-voltage ICSP disabled)
                      00136 
                      00137 ; CONFIG5L
                      00138   CONFIG  CP0 = OFF             ; Code Protection bit (Block 0 (000200-003FFFh) not code-protected)
                      00139   CONFIG  CP1 = OFF             ; Code Protection bit (Block 1 (004000-007FFFh) not code-protected)
                      00140   CONFIG  CP2 = OFF             ; Code Protection bit (Block 2 (008000-00BFFFh) not code-protected)
                      00141   CONFIG  CP3 = OFF             ; Code Protection bit (Block 3 (00C000-00FFFFh) not code-protected)
                      00142 
                      00143 ; CONFIG5H
                      00144   CONFIG  CPB = OFF             ; Boot Block Code Protection bit (Boot Block (000000-0001FFh) not code-p
                            rotected)
                      00145   CONFIG  CPD = OFF             ; Data EEPROM Code Protection bit (Data EEPROM not code-protected)
                      00146 
                      00147 ; CONFIG6L
                      00148   CONFIG  WRT0 = OFF            ; Write Protection bit (Block 0 (000200-003FFFh) not write-protected)
                      00149   CONFIG  WRT1 = OFF            ; Write Protection bit (Block 1 (004000-007FFFh) not write-protected)
                      00150   CONFIG  WRT2 = OFF            ; Write Protection bit (Block 2 (008000-00BFFFh) not write-protected)
                      00151   CONFIG  WRT3 = OFF            ; Write Protection bit (Block 3 (00C000-00FFFFh) not write-protected)
                      00152 
                      00153 ; CONFIG6H
                      00154   CONFIG  WRTC = OFF            ; Configuration Register Write Protection bit (Configuration registers (
                            300000-3000FFh) not write-protected)
                      00155   CONFIG  WRTB = OFF            ; Boot Block Write Protection bit (Boot Block (000000-0001FFh) not write
                            -protected)
                      00156   CONFIG  WRTD = OFF            ; Data EEPROM Write Protection bit (Data EEPROM not write-protected)
                      00157 
                      00158 ; CONFIG7L
                      00159   CONFIG  EBTR0 = OFF           ; Table Read Protection bit (Block 0 (000200-003FFFh) not protected from
                             table reads executed in other blocks)
                      00160   CONFIG  EBTR1 = OFF           ; Table Read Protection bit (Block 1 (004000-007FFFh) not protected from
                             table reads executed in other blocks)
                      00161   CONFIG  EBTR2 = OFF           ; Table Read Protection bit (Block 2 (008000-00BFFFh) not protected from
                             table reads executed in other blocks)
                      00162   CONFIG  EBTR3 = OFF           ; Table Read Protection bit (Block 3 (00C000-00FFFFh) not protected from
                             table reads executed in other blocks)
                      00163 
                      00164 ; CONFIG7H
                      00165   CONFIG  EBTRB = OFF           ; Boot Block Table Read Protection bit (Boot Block (000000-0001FFh) not 
                            protected from table reads executed in other blocks)
                      00166 ; *****************************************************************************
                      00167 ; *****************************************************************************
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00168 #define STX             0x0F            
                      00169 #define ETX             0x04
                      00170 #define DLE             0x05
                      00171 #define NTX             0xFF
                      00172 ; *****************************************************************************
                      00173 
                      00174 ; *****************************************************************************
                      00175 ; RAM Address Map
  00000000            00176 CRCL                equ 0x00
  00000001            00177 CRCH                equ 0x01
  00000002            00178 RXDATA              equ 0x02
  00000003            00179 TXDATA              equ 0x03
                      00180 
                      00181 ; Framed Packet Format
                      00182 ; <STX>[<COMMAND><ADDRL><ADDRH><ADDRU><0x00><DATALEN><...DATA...>]<CRCL><CRCH><ETX>
  00000005            00183 COMMAND             equ 0x05        ; receive buffer
  00000006            00184 ADDRESS_L           equ 0x06
  00000007            00185 ADDRESS_H           equ 0x07
  00000008            00186 ADDRESS_U           equ 0x08
  00000009            00187 ADDRESS_X           equ 0x09
  0000000A            00188 DATA_COUNTL         equ 0x0A
  0000000B            00189 PACKET_DATA         equ 0x0B
  0000000B            00190 DATA_COUNTH         equ 0x0B        ; only for certain commands
                      00191 ; *****************************************************************************
                      00192 
                      00193 ; *****************************************************************************
                      00194     errorlevel -311                 ; don't warn on HIGH() operator values >16-bits
                      00195 
                      00196 #ifdef USE_SOFTBOOTWP
                      00197   #ifndef SOFTWP
                      00198     #define SOFTWP
                      00199   #endif
                      00200 #endif
                      00201 
                      00202 #ifdef USE_SOFTCONFIGWP
                      00203   #ifdef CONFIG_AS_FLASH
                      00204     #ifndef SOFTWP
                      00205       #define SOFTWP
                      00206     #endif
                      00207   #endif
                      00208 #endif
                      00209 
                      00210 #ifndef AppVector
                      00211     ; The application startup GOTO instruction will be written just before the Boot Block,
                      00212     ; courtesy of the host PC bootloader application.
                      00213     #define AppVector (BootloaderStart-.4)
                      00214 #endif
                      00215 ; *****************************************************************************
                      00216 
                      00217  
                      00218 ; *****************************************************************************
                      00219 #if BOOTLOADER_ADDRESS != 0
                      00220     ORG     0
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00221     ; The following GOTO is not strictly necessary, but may startup faster
                      00222     ; for large microcontrollers running at extremely slow clock speeds.
                      00223     ;goto    BootloaderBreakCheck  
                      00224 
                      00225     ORG     BOOTLOADER_ADDRESS
                      00226 BootloaderStart:
                      00227     bra     BootloadMode
                      00228 
                      00229 ; *****************************************************************************
                      00230 ; Determine if the application is supposed to be started or if we should
                      00231 ; go into bootloader mode.
                      00232 ;
                      00233 ; If RX pin is in BREAK state when we come out of MCLR reset, immediately 
                      00234 ; enter bootloader mode, even if there exists some application firmware in 
                      00235 ; program memory.
                      00236 BootloaderBreakCheck:
                      00237     DigitalInput                ; set RX pin as digital input on certain parts
                      00238 #ifdef INVERT_UART
                      00239     btfss   RXPORT, RXPIN
                      00240 GotoAppVector:
                      00241     goto    AppVector           ; no BREAK state, attempt to start application
                      00242 #else
                      00243     btfsc   RXPORT, RXPIN
                      00244 GotoAppVector:
                      00245     goto    AppVector           ; no BREAK state, attempt to start application
                      00246 #endif
                      00247 
                      00248 BootloadMode:
                      00249     DigitalInput                ; set RX pin as digital input on certain parts
                      00250 #else ; BOOTLOADER_ADDRESS == 0 ****************************************************************
000000                00251     ORG     0
000000                00252 BootloaderStart:
                      00253     DigitalInput                ; set RX pin as digital input on certain parts
                          M #ifdef __18F1320
                          M     #if BOOTLOADER_ADDRESS == 0
                          M     nop                         ; start up GOTO instruction errata
                          M     #endif
                          M     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                          M #endif
                          M #ifdef __18F1220
                          M     #if BOOTLOADER_ADDRESS == 0
                          M     nop                         ; start up GOTO instruction errata
                          M     #endif
                          M     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                          M #endif
                          M 
                          M #ifdef RXANSEL
                          M     banksel RXANSEL
                          M     bcf     RXANSEL, RXAN
                          M #else
                          M     #ifdef ANSC7
                          M         banksel ANSELC          ; ANSELC is in non-access bank 0x0F on PIC18F46K22 family
                          M         bcf     ANSELC, ANSC7   ; Digital input enable on RC7/RX pin for PIC18F46K22 family
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     #endif
                          M #endif
000000 0E00           00254     movlw   low(AppVector)      ; load address of application reset vector
000002 D004           00255     bra     BootloaderBreakCheck
                      00256 
000008                00257         ORG         0x0008
000008                00258 HighPriorityInterruptVector:
000008 EF04 F004      00259         goto    AppHighIntVector    ; Re-map Interrupt vector
                      00260 
00000C                00261 BootloaderBreakCheck:
                      00262 #ifdef INVERT_UART
                      00263     btfsc   RXPORT, RXPIN
                      00264     bra     BootloadMode
                      00265 #else
00000C AE82           00266     btfss   RXPORT, RXPIN
00000E D00F           00267     bra     BootloadMode
                      00268 #endif
000010                00269 CheckAppVector:
                      00270     ; Read instruction at the application reset vector location. 
                      00271     ; If we read 0xFFFF, assume that the application firmware has
                      00272     ; not been programmed yet, so don't try going into application mode.
000010 6EF6           00273     movwf   TBLPTRL
000012 0E08           00274     movlw   high(AppVector)
000014 6EF7           00275     movwf   TBLPTRH
000016 D002           00276     bra     CheckAppVector2
                      00277 
000018                00278         ORG         0x0018
000018                00279 LowPriorityInterruptVector:
000018 EF0C F004      00280         goto    AppLowIntVector     ; Re-map Interrupt vector
                      00281 
00001C                00282 CheckAppVector2:
00001C 0E00           00283     movlw   upper(AppVector)
00001E 6EF8           00284     movwf   TBLPTRU     
000020 0009           00285     tblrd   *+                  ; read instruction from program memory
000022 3CF5           00286     incfsz  TABLAT, W           ; if the lower byte != 0xFF, 
000024                00287 GotoAppVector:
000024 EF00 F004      00288     goto    AppVector           ; run application.
                      00289 
000028 0009           00290     tblrd   *+                  ; read instruction from program memory
00002A 3CF5           00291     incfsz  TABLAT, W           ; if the lower byte == 0xFF but upper byte != 0xFF,
00002C D7FB           00292     bra     GotoAppVector       ; run application.
                      00293     ; otherwise, assume application firmware is not present because we read a NOP (0xFFFF).
                      00294     ; fall through to bootloader mode...
00002E                00295 BootloadMode:
                      00296 #endif ; end BOOTLOADER_ADDRESS == 0 ******************************************
00002E EE20 F000      00297     lfsr    FSR2, 0             ; for compatibility with Extended Instructions mode.
                      00298 
                      00299 #ifdef USE_MAX_INTOSC
000032 0E70           00300     movlw   b'01110000'         ; set INTOSC to maximum speed (usually 8MHz)
000034 12D3           00301     iorwf   OSCCON, f
                      00302 #endif
                      00303 
                      00304 #ifdef USE_PLL
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00305     #ifdef PLLEN
                      00306         #ifdef OSCTUNE
                      00307             bsf     OSCTUNE, PLLEN      ; enable PLL for faster internal clock
                      00308         #else
                      00309             ; 18F8680, 18F8585, 18F6680, and 18F6585 doesn't have OSCTUNE register.
                      00310             ; Instead, PLLEN bit is in OSCCON.
                      00311             bsf     OSCCON, PLLEN      ; enable PLL for faster internal clock
                      00312         #endif
                      00313     #else
                      00314         #ifdef SPLLEN
                      00315             bsf     OSCTUNE, SPLLEN     ; PIC18F14K50 has SPLLEN at bit 6
                      00316         #endif
                      00317     #endif
                      00318 #endif
                      00319 
                      00320 #ifdef INVERT_UART
                      00321     btfsc   RXPORT, RXPIN       ; wait for RX pin to go IDLE
                      00322     bra     $-2
                      00323 #else
000036 AE82           00324     btfss   RXPORT, RXPIN       ; wait for RX pin to go IDLE
000038 D7FE           00325     bra     $-2
                      00326 #endif
                      00327 
                      00328 #ifdef PPS_UTX_PIN
                      00329     banksel PPSCON
                      00330     ; unlock PPS registers
                      00331     movlw   0x55
                      00332     movwf   EECON2, ACCESS
                      00333     movlw   0xAA
                      00334     movwf   EECON2, ACCESS
                      00335     bcf     PPSCON, IOLOCK, BANKED
                      00336 
                      00337     ; assign UART RX/TX to PPS remappable pins
                      00338     movlw   PPS_UTX
                      00339     movwf   PPS_UTX_PIN, BANKED
                      00340 
                      00341     movlw   PPS_URX_PIN
                      00342     movwf   PPS_URX, BANKED
                      00343 
                      00344     ; lock PPS registers from inadvertent changes
                      00345     movlw   0x55
                      00346     movwf   EECON2, ACCESS
                      00347     movlw   0xAA
                      00348     movwf   EECON2, ACCESS
                      00349     bsf     PPSCON, IOLOCK, BANKED
                      00350     movlb   0x0F
                      00351 #endif
                      00352 
00003A 0E90           00353     movlw   b'10010000'         ; Setup UART
00003C 6EAB           00354     movwf   UxRCSTA
00003E 0E26           00355     movlw   b'00100110'         ; BRGH = 1, TXEN = 1
000040 6EAC           00356     movwf   UxTXSTA
                      00357 
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00358 #ifdef INVERT_UART
                      00359     bsf     UxBAUDCON, RXDTP
                      00360     bsf     UxBAUDCON, TXCKP
                      00361 #endif
                      00362 
                      00363 #ifdef BRG16
                      00364     bsf     UxBAUDCON, BRG16
                      00365     movlw   b'00000010'         ; 1:8 prescaler - no division required later (but no rounding possible)
                      00366 #else
000042 0E03           00367     movlw   b'00000011'         ; 1:16 prescaler - thus we only have to divide by 2 later on.
                      00368 #endif
000044 6ED5           00369     movwf   T0CON
                      00370 
                      00371 #ifdef PICDEM_LCD2
                      00372     bsf     LATB, LATB0         ; PICDEM LCD 2 demoboard requires RB0 high to enable MAX3221 TX output t
                            o PC.
                      00373     bcf     TRISB, TRISB0
                      00374 #endif
                      00375 ; *****************************************************************************
                      00376 
                      00377 
                      00378 ; *****************************************************************************
                      00379 #ifdef USE_AUTOBAUD
000046                00380 DoAutoBaud:
                      00381 ; ___    __________            ________
                      00382 ;    \__/          \__________/
                      00383 ;       |                     |
                      00384 ;       |-------- p ----------|
                      00385 ;
                      00386 ;   p = The number of instructions between the first and last
                      00387 ;           rising edge of the RS232 control sequence 0x0F. Other 
                      00388 ;       possible control sequences are 0x01, 0x03, 0x07, 0x1F, 
                      00389 ;       0x3F, 0x7F.
                      00390 ;
                      00391 ;   SPBRG = (p / 32) - 1    BRGH = 1, BRG16 = 0
                      00392 ;   SPBRG = (p / 8) - 1     BRGH = 1, BRG16 = 1
                      00393 
000046 98AB           00394     bcf     UxRCSTA, CREN       ; Stop receiving
000048 50AE           00395     movf    UxRCREG, W          ; Empty the buffer
00004A 50AE           00396     movf    UxRCREG, W
                      00397 
00004C                00398 RetryAutoBaud:
00004C 6AD7           00399     clrf    TMR0H               ; reset timer count value
00004E 6AD6           00400     clrf    TMR0L
000050 94F2           00401     bcf     INTCON, TMR0IF
000052 D850           00402     rcall   WaitForRise         ; wait for a start bit to pass by
000054 8ED5           00403     bsf     T0CON, TMR0ON       ; start timer counting for entire D7..D0 data bit period.
000056 D84E           00404     rcall   WaitForRise         ; wait for stop bit
000058 9ED5           00405     bcf     T0CON, TMR0ON       ; stop the timer from counting further. 
                      00406 
00005A B4F2           00407     btfsc   INTCON, TMR0IF      ; if TMR0 overflowed, we did not get a good baud capture
00005C D7F7           00408     bra     RetryAutoBaud       ; try again
                      00409 
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00410     #ifdef BRG16
                      00411     ; save new baud rate generator value
                      00412     movff   TMR0L, UxSPBRG      ; warning: must read TMR0L before TMR0H holds real data
                      00413     movff   TMR0H, UxSPBRGH
                      00414     #else 
00005E CFD6 FFAF      00415     movff   TMR0L, UxSPBRG      ; warning: must read TMR0L before TMR0H holds real data
                      00416     ; TMR0H:TMR0L holds (p / 16).
000062 30D7           00417     rrcf    TMR0H, w            ; divide by 2
000064 32AF           00418     rrcf    UxSPBRG, F            
000066 A0D8           00419     btfss   STATUS, C           ; rounding
000068 06AF           00420     decf    UxSPBRG, F    
                      00421     #endif
                      00422 
00006A 88AB           00423     bsf     UxRCSTA, CREN       ; start receiving
                      00424 
00006C                00425 WaitForHostCommand:
00006C D921           00426     rcall   ReadHostByte        ; get start of transmission <STX>
00006E 0A0F           00427     xorlw   STX
000070 E1EA           00428     bnz     DoAutoBaud          ; got something unexpected, perform autobaud
                      00429 #else ; not using autobaud
                      00430     movlw   low(BAUDRG)         ; set fixed baud rate generator value
                      00431     movwf   UxSPBRG
                      00432     #ifdef UxSPBRGH
                      00433         #if high(BAUDRG) != 0
                      00434     movlw   high(BAUDRG)
                      00435     movwf   UxSPBRGH
                      00436         #endif
                      00437     #endif
                      00438     bsf     UxRCSTA, CREN       ; start receiving
                      00439 DoAutoBaud:
                      00440 WaitForHostCommand:
                      00441     rcall   ReadHostByte        ; get start of transmission <STX>
                      00442     xorlw   STX
                      00443     bnz     WaitForHostCommand  ; got something unexpected, keep waiting for <STX>
                      00444 #endif ; end #ifdef USE_AUTOBAUD
                      00445         
                      00446 ; *****************************************************************************
                      00447 
                      00448 ; *****************************************************************************
                      00449 ; Read and parse packet data.
000072                00450 StartOfLine:
000072 0E0F           00451     movlw   STX                     ; send back start of response
000074 D918           00452     rcall   SendHostByte
                      00453 
000076 EE00 F004      00454     lfsr    FSR0, COMMAND-1         ; Point to the buffer
                      00455         
00007A                00456 ReceiveDataLoop:
00007A D91A           00457     rcall   ReadHostByte            ; Get the data
00007C 0A0F           00458     xorlw   STX                     ; Check for an unexpected STX
00007E E0F9           00459     bz      StartOfLine             ; unexpected STX: abort packet and start over.
                      00460 
000080                00461 NoSTX:
000080 5002           00462     movf    RXDATA, W
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000082 0A04           00463     xorlw   ETX                     ; Check for a ETX
000084 E007           00464     bz      VerifyPacketCRC         ; Yes, verify CRC
                      00465 
000086                00466 NoETX:
000086 5002           00467     movf    RXDATA, W
000088 0A05           00468     xorlw   DLE                     ; Check for a DLE
00008A E101           00469     bnz     AppendDataBuffer
                      00470 
00008C D911           00471     rcall   ReadHostByte            ; DLE received, get the next byte and store it
                      00472     
00008E                00473 AppendDataBuffer:
00008E C002 FFEC      00474     movff   RXDATA, PREINC0         ; store the data to the buffer
000092 D7F3           00475     bra     ReceiveDataLoop
                      00476 
000094                00477 VerifyPacketCRC:
000094 EE10 F005      00478     lfsr    FSR1, COMMAND
000098 6A00           00479     clrf    CRCL
00009A 6A01           00480     clrf    CRCH
00009C CFED FFF4      00481     movff   POSTDEC0, PRODH         ; Save host packet's CRCH to PRODH for later comparison
                      00482                                     ; CRCL is now available as INDF0
0000A0                00483 VerifyPacketCrcLoop:
0000A0 50E6           00484     movf    POSTINC1, w
0000A2 D830           00485     rcall   AddCrc                  ; add new data to the CRC
                      00486 
0000A4 50E2           00487     movf    FSR1H, w
0000A6 62EA           00488     cpfseq  FSR0H
0000A8 D7FB           00489     bra     VerifyPacketCrcLoop     ; we aren't at the end of the received data yet, loop
0000AA 50E1           00490     movf    FSR1L, w
0000AC 62E9           00491     cpfseq  FSR0L
0000AE D7F8           00492     bra     VerifyPacketCrcLoop     ; we aren't at the end of the received data yet, loop
                      00493 
0000B0 5001           00494     movf    CRCH, w
0000B2 62F4           00495     cpfseq  PRODH
0000B4 D7C8           00496     bra     DoAutoBaud              ; invalid CRC, reset baud rate generator to re-sync with host
0000B6 5000           00497     movf    CRCL, w
0000B8 62EF           00498     cpfseq  INDF0
0000BA D7C5           00499     bra     DoAutoBaud              ; invalid CRC, reset baud rate generator to re-sync with host
                      00500 
                      00501 ; ***********************************************
                      00502 ; Pre-setup, common to all commands.
0000BC 6A00           00503     clrf    CRCL
0000BE 6A01           00504     clrf    CRCH
                      00505 
0000C0 5006           00506     movf    ADDRESS_L, W            ; Set all possible pointers
0000C2 6EF6           00507     movwf   TBLPTRL
                      00508 #ifdef EEADR
0000C4 6EA9           00509     movwf   EEADR
                      00510 #endif
0000C6 5007           00511     movf    ADDRESS_H, W
0000C8 6EF7           00512     movwf   TBLPTRH
                      00513 #ifdef EEADRH
0000CA 6EAA           00514     movwf   EEADRH
                      00515 #endif
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000CC C008 FFF8      00516     movff   ADDRESS_U, TBLPTRU
0000D0 EE00 F00B      00517     lfsr    FSR0, PACKET_DATA
                      00518 ; ***********************************************
                      00519 
                      00520  
                      00521 
                      00522 ; ***********************************************
                      00523 ; Test the command field and sub-command.
0000D4                00524 CheckCommand:
0000D4 0E0A           00525     movlw   .10
0000D6 6005           00526     cpfslt  COMMAND
0000D8 D7B6           00527     bra     DoAutoBaud          ; invalid command - reset baud generator to re-sync with host
                      00528 
                      00529     ; This jump table must exist entirely within one 256 byte block of program memory.
                      00530 #if ($ & 0xFF) > (0xFF - .24)
                      00531     ; Too close to the end of a 256 byte boundary, push address forward to get code
                      00532     ; into the next 256 byte block.
                      00533     messg   "Wasting some code space to ensure jump table is aligned."
                      00534     ORG     $+(0x100 - ($ & 0xFF))
                      00535 #endif
0000DA                00536 JUMPTABLE_BEGIN:
0000DA 50F9           00537     movf    PCL, w              ; 0 do a read of PCL to set PCLATU:PCLATH to current program counter.
0000DC 4405           00538     rlncf   COMMAND, W          ; 2 multiply COMMAND by 2 (each BRA instruction takes 2 bytes on PIC18)
0000DE 26F9           00539     addwf   PCL, F              ; 4 Jump in command jump table based on COMMAND from host
0000E0 D027           00540     bra     BootloaderInfo      ; 6 00h
0000E2 D02F           00541     bra     ReadFlash           ; 8 01h
0000E4 D039           00542     bra     VerifyFlash         ; 10 02h
0000E6 D04F           00543     bra     EraseFlash          ; 12 03h
0000E8 D07C           00544     bra     WriteFlash          ; 14 04h
0000EA D0A8           00545     bra     ReadEeprom          ; 16 05h
0000EC D0B5           00546     bra     WriteEeprom         ; 18 06h
0000EE D0C4           00547     bra     WriteConfig         ; 20 07h
0000F0 D799           00548     bra     GotoAppVector       ; 22 08h
0000F2 00FF           00549     reset                       ; 24 09h
                      00550 
                      00551 #if (JUMPTABLE_BEGIN & 0xFF) > ($ & 0xFF)
                      00552     error "Jump table is not aligned to fit within a single 256 byte address range."
                      00553 #endif
                      00554 ; *****************************************************************************
                      00555 
                      00556 #ifdef INVERT_UART
                      00557 WaitForRise:
                      00558     clrwdt
                      00559 
                      00560 WaitForRiseLoop:
                      00561     btfsc   INTCON, TMR0IF  ; if TMR0 overflowed, we did not get a good baud capture
                      00562     return                  ; abort
                      00563 
                      00564     btfss   RXPORT, RXPIN   ; Wait for a falling edge
                      00565     bra     WaitForRiseLoop
                      00566 
                      00567 WtSR:
                      00568     btfsc   RXPORT, RXPIN   ; Wait for starting edge
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00569     bra     WtSR
                      00570     return
                      00571 #else ; not inverted UART pins
0000F4                00572 WaitForRise:
0000F4 0004           00573     clrwdt
                      00574 
0000F6                00575 WaitForRiseLoop
0000F6 B4F2           00576     btfsc   INTCON, TMR0IF  ; if TMR0 overflowed, we did not get a good baud capture
0000F8 0012           00577     return                  ; abort
                      00578 
0000FA BE82           00579     btfsc   RXPORT, RXPIN   ; Wait for a falling edge
0000FC D7FC           00580     bra     WaitForRiseLoop
                      00581 
0000FE                00582 WtSR:
0000FE AE82           00583     btfss   RXPORT, RXPIN   ; Wait for rising edge
000100 D7FE           00584     bra     WtSR
000102 0012           00585     return
                      00586 #endif ; end #ifdef INVERT_UART
                      00587 ; *****************************************************************************
                      00588 
                      00589 ; 16-bit CCITT CRC
                      00590 ; Adds WREG byte to the CRC checksum CRCH:CRCL. WREG destroyed on return.
000104                00591 AddCrc:                           ; Init: CRCH = HHHH hhhh, CRCL = LLLL llll
000104 1801           00592     xorwf   CRCH, w               ; Pre:  HHHH hhhh     WREG =      IIII iiii
000106 C000 F001      00593     movff   CRCL, CRCH            ; Pre:  LLLL llll     CRCH =      LLLL llll
00010A 6E00           00594     movwf   CRCL                  ; Pre:  IIII iiii     CRCL =      IIII iiii
00010C 3AE8           00595     swapf   WREG                  ; Pre:  IIII iiii     WREG =      iiii IIII
00010E 0B0F           00596     andlw   0x0F                  ; Pre:  iiii IIII     WREG =      0000 IIII
000110 1A00           00597     xorwf   CRCL, f               ; Pre:  IIII iiii     CRCL =      IIII jjjj
000112 3800           00598     swapf   CRCL, w               ; Pre:  IIII jjjj     WREG =      jjjj IIII
000114 0BF0           00599     andlw   0xF0                  ; Pre:  jjjj IIII     WREG =      jjjj 0000
000116 1A01           00600     xorwf   CRCH, f               ; Pre:  LLLL llll     CRCH =      MMMM llll
000118 3800           00601     swapf   CRCL, w               ; Pre:  IIII jjjj     WREG =      jjjj IIII
00011A 44E8           00602     rlncf   WREG, w               ; Pre:  jjjj IIII     WREG =      jjjI IIIj
00011C 1A01           00603     xorwf   CRCH, f               ; Pre:  MMMM llll     CRCH =      XXXN mmmm
00011E 0BE0           00604     andlw   b'11100000'           ; Pre:  jjjI IIIj     WREG =      jjj0 0000
000120 1A01           00605     xorwf   CRCH, f               ; Pre:  jjj0 0000     CRCH =      MMMN mmmm
000122 1A00           00606     xorwf   CRCL, f               ; Pre:  MMMN mmmm     CRCL =      JJJI jjjj
000124 0012           00607     return
                      00608 
                      00609 ; ***********************************************
                      00610 ; Commands
                      00611 ; ***********************************************
                      00612 
                      00613 ; Provides information about the Bootloader to the host PC software.
000126                00614 BootInfoBlock:
000126 0300           00615     db      low(BOOTBLOCKSIZE), high(BOOTBLOCKSIZE)
000128 0501           00616     db      MAJOR_VERSION, MINOR_VERSION
00012A 84FF           00617     db      0xFF, 0x84             ; command mask : family id 
00012C 0000           00618     db      low(BootloaderStart), high(BootloaderStart)
00012E 0000           00619     db      upper(BootloaderStart), 0 
000130                00620 BootInfoBlockEnd:
                      00621 
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00622 ; In:   <STX>[<0x00>]<CRCL><CRCH><ETX>
                      00623 ; Out:  <STX><BOOTBYTESL><BOOTBYTESH><VERL><VERH><STARTBOOTL><STARTBOOTH><STARTBOOTU><0x00><CRCL><CRCH><
                            ETX>
000130                00624 BootloaderInfo:
000130 0E26           00625     movlw   low(BootInfoBlock)
000132 6EF6           00626     movwf   TBLPTRL
000134 0E01           00627     movlw   high(BootInfoBlock)
000136 6EF7           00628     movwf   TBLPTRH
000138 0E00           00629     movlw   upper(BootInfoBlock)
00013A 6EF8           00630     movwf   TBLPTRU
                      00631 
00013C 0E0A           00632     movlw   (BootInfoBlockEnd - BootInfoBlock)
00013E 6E0A           00633     movwf   DATA_COUNTL
000140 6A0B           00634     clrf    DATA_COUNTH
                      00635     ;; fall through to ReadFlash code -- send Bootloader Information Block from FLASH.
                      00636 
                      00637 ; In:   <STX>[<0x01><ADDRL><ADDRH><ADDRU><0x00><BYTESL><BYTESH>]<CRCL><CRCH><ETX>
                      00638 ; Out:  <STX>[<DATA>...]<CRCL><CRCH><ETX>
000142                00639 ReadFlash:
000142 0009           00640     tblrd   *+                  ; read from FLASH memory into TABLAT
000144 50F5           00641     movf    TABLAT, w
000146 D8A3           00642     rcall   SendEscapeByte
000148 DFDD           00643     rcall   AddCrc
                      00644 
00014A 060A           00645     decf    DATA_COUNTL, f      ; decrement counter
00014C 0E00           00646     movlw   0
00014E 5A0B           00647     subwfb  DATA_COUNTH, f
                      00648 
000150 500A           00649     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
000152 100B           00650     iorwf   DATA_COUNTH, w
000154 E1F6           00651     bnz     ReadFlash           ; no, loop
000156 D094           00652     bra     SendChecksum        ; yes, send end of packet
                      00653 
                      00654 ; In:   <STX>[<0x02><ADDRL><ADDRH><ADDRU><0x00><BLOCKSL><BLOCKSH>]<CRCL><CRCH><ETX>
                      00655 ; Out:  <STX>[<CRCL1><CRCH1>...<CRCLn><CRCHn>]<ETX>
000158                00656 VerifyFlash:
000158 0009           00657     tblrd   *+
00015A 50F5           00658     movf    TABLAT, w    
00015C DFD3           00659     rcall   AddCrc
                      00660 
00015E 50F6           00661     movf    TBLPTRL, w          ; have we crossed into the next block?
                      00662 #if ERASE_FLASH_BLOCKSIZE > .255
                      00663     bnz     VerifyFlash
                      00664     movf    TBLPTRH, w
                      00665     andlw   high(ERASE_FLASH_BLOCKSIZE-1)
                      00666 #else
000160 0B3F           00667     andlw   (ERASE_FLASH_BLOCKSIZE-1)    
                      00668 #endif
000162 E1FA           00669     bnz     VerifyFlash
                      00670 
000164 5000           00671     movf    CRCL, w
000166 EC47 F001      00672     call    SendEscapeByte
00016A 5001           00673     movf    CRCH, w
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00016C EC47 F001      00674     call    SendEscapeByte
                      00675 
000170 060A           00676     decf    DATA_COUNTL, f      ; decrement counter
000172 0E00           00677     movlw   0
000174 5A0B           00678     subwfb  DATA_COUNTH, f
                      00679 
000176 500A           00680     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
000178 100B           00681     iorwf   DATA_COUNTH, w
00017A E1EE           00682     bnz     VerifyFlash         ; no, loop
00017C D085           00683     bra     SendETX             ; yes, send end of packet
                      00684 
                      00685 #ifdef SOFTWP
00017E 00FF           00686     reset                       ; this code -should- never be executed, but 
000180 00FF           00687     reset                       ; just in case of errant execution or buggy
000182 00FF           00688     reset                       ; firmware, these reset instructions may protect
000184 00FF           00689     reset                       ; against accidental erases.
                      00690 #endif
                      00691 
                      00692 ; In:   <STX>[<0x03><ADDRL><ADDRH><ADDRU><0x00><PAGESL>]<CRCL><CRCH><ETX>
                      00693 ; Out:  <STX>[<0x03>]<CRCL><CRCH><ETX>
000186                00694 EraseFlash:
                      00695 #ifdef SOFTWP
                      00696   #define ERASE_ADDRESS_MASK  (~(ERASE_FLASH_BLOCKSIZE-1))
                      00697   #if upper(ERASE_ADDRESS_MASK) != 0xFF
                      00698     movlw   upper(ERASE_ADDRESS_MASK)    ; force starting address to land on a FLASH Erase Block boundar
                            y
                      00699     andwf   TBLPTRU, f
                      00700   #endif
                      00701   #if high(ERASE_ADDRESS_MASK) != 0xFF
                      00702     movlw   high(ERASE_ADDRESS_MASK)    ; force starting address to land on a FLASH Erase Block boundary
                      00703     andwf   TBLPTRH, f
                      00704   #endif
                      00705   #if low(ERASE_ADDRESS_MASK) != 0xFF
000186 0EC0           00706     movlw   low(ERASE_ADDRESS_MASK)     ; force starting address to land on a FLASH Erase Block boundary
000188 16F6           00707     andwf   TBLPTRL, f
                      00708   #endif
                      00709 
                      00710     ; Verify Erase Address does not attempt to erase beyond the end of FLASH memory
00018A 0E00           00711     movlw   low(END_FLASH)
00018C 5CF6           00712     subwf   TBLPTRL, w
00018E 0E00           00713     movlw   high(END_FLASH)
000190 58F7           00714     subwfb  TBLPTRH, w
000192 0E01           00715     movlw   upper(END_FLASH)
000194 58F8           00716     subwfb  TBLPTRU, w
000196 E602           00717     bn      EraseEndFlashAddressOkay
                      00718 
000198 6AA6           00719     clrf    EECON1              ; inhibit writes for this block
00019A D017           00720     bra     NextEraseBlock      ; move on to next erase block
                      00721 #endif ; end #ifdef USE_SOFTBOOTWP
                      00722 
00019C                00723 EraseEndFlashAddressOkay:
                      00724 #ifdef USE_SOFTCONFIGWP
                      00725     #ifdef CONFIG_AS_FLASH
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00726     movlw   low(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00727     subwf   TBLPTRL, w
                      00728     movlw   high(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00729     subwfb  TBLPTRH, w
                      00730     movlw   upper(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00731     subwfb  TBLPTRU, w
                      00732     bn      EraseConfigAddressOkay
                      00733 
                      00734     clrf    EECON1              ; inhibit writes for this block
                      00735     bra     NextEraseBlock      ; move on to next erase block
                      00736 
                      00737 EraseConfigAddressOkay:
                      00738     #endif ; end CONFIG_AS_FLASH
                      00739 #endif ; end USE_SOFTCONFIGWP
                      00740 
                      00741 #ifdef USE_SOFTBOOTWP
00019C 0E00           00742     movlw   low(BOOTLOADER_ADDRESS)
00019E 5CF6           00743     subwf   TBLPTRL, w
0001A0 0E00           00744     movlw   high(BOOTLOADER_ADDRESS)
0001A2 58F7           00745     subwfb  TBLPTRH, w
0001A4 0E00           00746     movlw   upper(BOOTLOADER_ADDRESS)
0001A6 58F8           00747     subwfb  TBLPTRU, w
0001A8 E60D           00748     bn      EraseAddressOkay
                      00749 
0001AA 0E00           00750     movlw   low(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
0001AC 5CF6           00751     subwf   TBLPTRL, w
0001AE 0E03           00752     movlw   high(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
0001B0 58F7           00753     subwfb  TBLPTRH, w
0001B2 0E00           00754     movlw   upper(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
0001B4 58F8           00755     subwfb  TBLPTRU, w
0001B6 E706           00756     bnn     EraseAddressOkay
                      00757 
0001B8 6AA6           00758     clrf    EECON1              ; inhibit writes for this block
0001BA D007           00759     bra     NextEraseBlock      ; move on to next erase block
                      00760 
0001BC 00FF           00761     reset                       ; this code -should- never be executed, but 
0001BE 00FF           00762     reset                       ; just in case of errant execution or buggy
0001C0 00FF           00763     reset                       ; firmware, these reset instruction may protect
0001C2 00FF           00764     reset                       ; against accidental writes.
                      00765 #endif
                      00766 
0001C4                00767 EraseAddressOkay:
                      00768 #ifdef EEADR
0001C4 0E94           00769     movlw   b'10010100'         ; setup FLASH erase
                      00770 #else
                      00771     movlw   b'00010100'         ; setup FLASH erase for J device (no EEPROM bit)
                      00772 #endif
0001C6 6EA6           00773     movwf   EECON1
                      00774 
0001C8 D881           00775     rcall   StartWrite          ; erase the page
                      00776 
0001CA                00777 NextEraseBlock:
                      00778     ; Decrement address by erase block size
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00779 #if ERASE_FLASH_BLOCKSIZE >= .256
                      00780     movlw   high(ERASE_FLASH_BLOCKSIZE)
                      00781     subwf   TBLPTRH, F
                      00782     clrf    WREG
                      00783     subwfb  TBLPTRU, F
                      00784 #else
0001CA 0E40           00785     movlw   ERASE_FLASH_BLOCKSIZE
0001CC 5EF6           00786     subwf   TBLPTRL, F
0001CE 6AE8           00787     clrf    WREG
0001D0 5AF7           00788     subwfb  TBLPTRH, F
0001D2 5AF8           00789     subwfb  TBLPTRU, F
                      00790 #endif
                      00791 
0001D4 2E0A           00792     decfsz  DATA_COUNTL, F
0001D6 D7D7           00793     bra     EraseFlash    
0001D8 D04F           00794     bra     SendAcknowledge     ; All done, send acknowledgement packet
                      00795 
                      00796 #ifdef SOFTWP
0001DA 00FF           00797     reset                       ; this code -should- never be executed, but 
0001DC 00FF           00798     reset                       ; just in case of errant execution or buggy
0001DE 00FF           00799     reset                       ; firmware, these reset instructions may protect
0001E0 00FF           00800     reset                       ; against accidental writes.
                      00801 #endif
                      00802 
                      00803 ; In:   <STX>[<0x04><ADDRL><ADDRH><ADDRU><0x00><BLOCKSL><DATA>...]<CRCL><CRCH><ETX>
                      00804 ; Out:  <STX>[<0x04>]<CRCL><CRCH><ETX>
0001E2                00805 WriteFlash:
                      00806 #ifdef SOFTWP
                      00807   #define WRITE_ADDRESS_MASK (~(WRITE_FLASH_BLOCKSIZE-1))
                      00808   #if upper(WRITE_ADDRESS_MASK) != 0xFF
                      00809     movlw   upper(WRITE_ADDRESS_MASK)    ; force starting address to land on a FLASH Write Block boundar
                            y
                      00810     andwf   TBLPTRU, f
                      00811   #endif
                      00812   #if high(WRITE_ADDRESS_MASK) != 0xFF
                      00813     movlw   high(WRITE_ADDRESS_MASK)    ; force starting address to land on a FLASH Write Block boundary
                      00814     andwf   TBLPTRH, f
                      00815   #endif
                      00816   #if low(WRITE_ADDRESS_MASK) != 0xFF
0001E2 0EF8           00817     movlw   low(WRITE_ADDRESS_MASK)     ; force starting address to land on a FLASH Write Block boundary
0001E4 16F6           00818     andwf   TBLPTRL, f
                      00819   #endif
                      00820 
                      00821     ; Verify Write Address does not attempt to write beyond the end of FLASH memory
0001E6 0E00           00822     movlw   low(END_FLASH)
0001E8 5CF6           00823     subwf   TBLPTRL, w
0001EA 0E00           00824     movlw   high(END_FLASH)
0001EC 58F7           00825     subwfb  TBLPTRH, w
0001EE 0E01           00826     movlw   upper(END_FLASH)
0001F0 58F8           00827     subwfb  TBLPTRU, w
0001F2 E602           00828     bn      WriteEndFlashAddressOkay
                      00829 
0001F4 6AA6           00830     clrf    EECON1              ; inhibit writes for this block
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001F6 D016           00831     bra     LoadHoldingRegisters; fake the write so we can move on to real writes
                      00832 #endif ; end #ifdef SOFTWP
                      00833 
0001F8                00834 WriteEndFlashAddressOkay:
                      00835 #ifdef USE_SOFTCONFIGWP
                      00836     #ifdef CONFIG_AS_FLASH
                      00837     movlw   low(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00838     subwf   TBLPTRL, w
                      00839     movlw   high(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00840     subwfb  TBLPTRH, w
                      00841     movlw   upper(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00842     subwfb  TBLPTRU, w
                      00843     bn      WriteConfigAddressOkay
                      00844 
                      00845     clrf    EECON1              ; inhibit writes for this block
                      00846     bra     LoadHoldingRegisters; fake the write so we can move on to real writes
                      00847 
                      00848 WriteConfigAddressOkay:
                      00849     #endif ; end CONFIG_AS_FLASH
                      00850 #endif ; end USE_SOFTCONFIGWP
                      00851 
                      00852 #ifdef USE_SOFTBOOTWP
0001F8 0E00           00853     movlw   low(BOOTLOADER_ADDRESS)
0001FA 5CF6           00854     subwf   TBLPTRL, w
0001FC 0E00           00855     movlw   high(BOOTLOADER_ADDRESS)
0001FE 58F7           00856     subwfb  TBLPTRH, w
000200 0E00           00857     movlw   upper(BOOTLOADER_ADDRESS)
000202 58F8           00858     subwfb  TBLPTRU, w
000204 E60D           00859     bn      WriteAddressOkay
                      00860 
000206 0E00           00861     movlw   low(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
000208 5CF6           00862     subwf   TBLPTRL, w
00020A 0E03           00863     movlw   high(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
00020C 58F7           00864     subwfb  TBLPTRH, w
00020E 0E00           00865     movlw   upper(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
000210 58F8           00866     subwfb  TBLPTRU, w
000212 E706           00867     bnn     WriteAddressOkay
                      00868 
000214 6AA6           00869     clrf    EECON1                      ; inhibit writes for this block
000216 D006           00870     bra     LoadHoldingRegisters        ; fake the write so we can move on to real writes
                      00871 
000218 00FF           00872     reset                       ; this code -should- never be executed, but 
00021A 00FF           00873     reset                       ; just in case of errant execution or buggy
00021C 00FF           00874     reset                       ; firmware, these reset instruction may protect
00021E 00FF           00875     reset                       ; against accidental writes.
                      00876 #endif
                      00877 
000220                00878 WriteAddressOkay:
                      00879 #ifdef EEADR
000220 0E84           00880     movlw   b'10000100'         ; Setup FLASH writes
                      00881 #else
                      00882     movlw   b'00000100'         ; Setup FLASH writes for J device (no EEPROM bit)
                      00883 #endif
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000222 6EA6           00884     movwf   EECON1
                      00885 
000224                00886 LoadHoldingRegisters:
000224 CFEE FFF5      00887     movff   POSTINC0, TABLAT    ; Load the holding registers
                      00888     pmwtpi                      ; Same as tblwt *+
                          M #ifdef TBLWT_BUG
                          M     tblwt   *
                          M     tblrd   *+
                          M #else
000228 000D               M     tblwt   *+
                          M #endif
                      00889 
00022A 50F6           00890     movf    TBLPTRL, w          ; have we crossed into the next write block?
00022C 0B07           00891     andlw   (WRITE_FLASH_BLOCKSIZE-1)
00022E E1FA           00892     bnz     LoadHoldingRegisters; Not finished writing holding registers, repeat
                      00893 
000230 000A           00894     tblrd   *-                  ; Point back into the block to write data
000232 D84C           00895     rcall   StartWrite          ; initiate a page write
000234 0009           00896     tblrd   *+                  ; Restore pointer for loading holding registers with next block
                      00897 
000236 2E0A           00898     decfsz  DATA_COUNTL, F      
000238 D7D4           00899     bra     WriteFlash          ; Not finished writing all blocks, repeat
00023A D01E           00900     bra     SendAcknowledge     ; all done, send ACK packet
                      00901 
                      00902 ; In:   <STX>[<0x05><ADDRL><ADDRH><0x00><0x00><BYTESL><BYTESH>]<CRCL><CRCH><ETX>
                      00903 ; Out:  <STX>[<DATA>...]<CRCL><CRCH><ETX>
                      00904 #ifdef EEADR                ; some devices do not have EEPROM, so no need for this code
00023C                00905 ReadEeprom:
00023C 6AA6           00906     clrf    EECON1 
00023E                00907 ReadEepromLoop:
00023E 80A6           00908     bsf     EECON1, RD          ; Read the data
000240 50A8           00909     movf    EEDATA, w
                      00910     #ifdef EEADRH
000242 4AA9           00911     infsnz  EEADR, F            ; Adjust EEDATA pointer
000244 2AAA           00912     incf    EEADRH, F
                      00913     #else
                      00914     incf    EEADR, F            ; Adjust EEDATA pointer
                      00915     #endif
000246 D823           00916     rcall   SendEscapeByte
000248 DF5D           00917     rcall   AddCrc
                      00918 
                      00919     #ifdef EEADRH
00024A 060A           00920     decf    DATA_COUNTL, f      ; decrement counter
00024C 0E00           00921     movlw   0
00024E 5A0B           00922     subwfb  DATA_COUNTH, f
                      00923 
000250 500A           00924     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
000252 100B           00925     iorwf   DATA_COUNTH, w
000254 E1F4           00926     bnz     ReadEepromLoop      ; no, loop
000256 D014           00927     bra     SendChecksum        ; yes, send end of packet
                      00928     #else
                      00929     decfsz  DATA_COUNTL, F
                      00930     bra     ReadEepromLoop      ; Not finished then repeat
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00931     bra     SendChecksum
                      00932     #endif
                      00933 #endif ; end #ifdef EEADR
                      00934 
                      00935 ; In:   <STX>[<0x06><ADDRL><ADDRH><0x00><0x00><BYTESL><BYTESH><DATA>...]<CRCL><CRCH><ETX>
                      00936 ; Out:  <STX>[<0x06>]<CRCL><CRCH><ETX>
                      00937 #ifdef EEADR                ; some devices do not have EEPROM, so no need for this code
000258                00938 WriteEeprom:
000258 0E04           00939     movlw   b'00000100'     ; Setup for EEPROM data writes
00025A 6EA6           00940     movwf   EECON1
                      00941 
00025C                00942 WriteEepromLoop:
00025C CFEC FFA8      00943     movff   PREINC0, EEDATA
000260 D835           00944     rcall   StartWrite      
                      00945 
000262 B2A6           00946     btfsc   EECON1, WR      ; wait for write to complete before moving to next address
000264 D7FE           00947     bra     $-2
                      00948 
                      00949     #ifdef EEADRH
000266 4AA9           00950     infsnz  EEADR, F        ; Adjust EEDATA pointer
000268 2AAA           00951     incf    EEADRH, F
                      00952     #else
                      00953     incf    EEADR, f        ; Adjust EEDATA pointer
                      00954     #endif
                      00955 
                      00956     #ifdef EEADRH
00026A 060A           00957     decf    DATA_COUNTL, f      ; decrement counter
00026C 0E00           00958     movlw   0
00026E 5A0B           00959     subwfb  DATA_COUNTH, f
                      00960 
000270 500A           00961     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
000272 100B           00962     iorwf   DATA_COUNTH, w
000274 E1F3           00963     bnz     WriteEepromLoop     ; no, loop
000276 D000           00964     bra     SendAcknowledge     ; yes, send end of packet
                      00965     #else
                      00966     decfsz  DATA_COUNTL, f
                      00967     bra     WriteEepromLoop
                      00968     bra     SendAcknowledge
                      00969     #endif
                      00970 #endif ; end #ifdef EEADR
                      00971  
                      00972 ; In:   <STX>[<0x07><ADDRL><ADDRH><ADDRU><0x00><BYTES><DATA>...]<CRCL><CRCH><ETX>
                      00973 ; Out:  <STX>[<0x07>]<CRCL><CRCH><ETX>
                      00974 #ifndef CONFIG_AS_FLASH     ; J flash devices store config words in FLASH, so no need for this code
                      00975     #ifndef USE_SOFTCONFIGWP
                      00976 WriteConfig:
                      00977     movlw   b'11000100'
                      00978     movwf   EECON1
                      00979     tblrd   *               ; read existing value from config memory
                      00980 
                      00981 WriteConfigLoop:
                      00982     movf    POSTINC0, w
                      00983     cpfseq  TABLAT          ; is the proposed value already the same as existing value?
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00984     rcall   TableWriteWREG  ; write config memory only if necessary (save time and endurance)
                      00985     tblrd   +*              ; increment table pointer to next address and read existing value
                      00986     decfsz  DATA_COUNTL, F
                      00987     bra     WriteConfigLoop ; If more data available in packet, keep looping
                      00988 
                      00989     bra     SendAcknowledge ; Send acknowledge
                      00990     #endif ; end #ifndef USE_SOFTCONFIGWP
                      00991 #endif ; end #ifndef CONFIG_AS_FLASH
                      00992     
                      00993 ;************************************************
                      00994 
                      00995 ; ***********************************************
                      00996 ; Send an acknowledgement packet back
                      00997 ;
                      00998 ; <STX><COMMAND><CRCL><CRCH><ETX>
                      00999 
                      01000 ; Some devices only have config words as FLASH memory. Some devices don't have EEPROM.
                      01001 ; For these devices, we can save code by jumping directly to sending back an
                      01002 ; acknowledgement packet if the PC application erroneously requests them.
                      01003 #ifdef CONFIG_AS_FLASH
                      01004 WriteConfig:
                      01005 #else
                      01006   #ifdef USE_SOFTCONFIGWP
000278                01007 WriteConfig:
                      01008   #endif
                      01009 #endif ; end #ifdef CONFIG_AS_FLASH
                      01010 
                      01011 #ifndef EEADR
                      01012 ReadEeprom:
                      01013 WriteEeprom:
                      01014 #endif
                      01015 
000278                01016 SendAcknowledge:
000278 6AA6           01017     clrf    EECON1              ; inhibit write cycles to FLASH memory
                      01018 
00027A 5005           01019     movf    COMMAND, w
00027C D808           01020     rcall   SendEscapeByte      ; Send only the command byte (acknowledge packet)
00027E DF42           01021     rcall   AddCrc
                      01022 
000280                01023 SendChecksum:
000280 5000           01024     movf    CRCL, W
000282 D805           01025     rcall   SendEscapeByte
                      01026 
000284 5001           01027     movf    CRCH, W
000286 D803           01028     rcall   SendEscapeByte
                      01029 
000288                01030 SendETX:
000288 0E04           01031     movlw   ETX             ; Send stop condition
00028A D80D           01032     rcall   SendHostByte
                      01033 
00028C D6EF           01034     bra     WaitForHostCommand
                      01035 ; *****************************************************************************
                      01036 
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01037 
                      01038 
                      01039 
                      01040 ; *****************************************************************************
                      01041 ; Write a byte to the serial port while escaping control characters with a DLE
                      01042 ; first.
00028E                01043 SendEscapeByte:
00028E 6E03           01044     movwf   TXDATA          ; Save the data
                      01045  
000290 0A0F           01046     xorlw   STX             ; Check for a STX
000292 E006           01047     bz      WrDLE           ; No, continue WrNext
                      01048 
000294 5003           01049     movf    TXDATA, W       
000296 0A04           01050     xorlw   ETX             ; Check for a ETX
000298 E003           01051     bz      WrDLE           ; No, continue WrNext
                      01052 
00029A 5003           01053     movf    TXDATA, W       
00029C 0A05           01054     xorlw   DLE             ; Check for a DLE
00029E E102           01055     bnz     WrNext          ; No, continue WrNext
                      01056 
0002A0                01057 WrDLE:
0002A0 0E05           01058     movlw   DLE             ; Yes, send DLE first
0002A2 D801           01059     rcall   SendHostByte
                      01060 
0002A4                01061 WrNext:
0002A4 5003           01062     movf    TXDATA, W       ; Then send STX
                      01063 
0002A6                01064 SendHostByte:
0002A6 0004           01065     clrwdt
0002A8 A89E           01066     btfss   UxPIR, UxTXIF      ; Write only if TXREG is ready
0002AA D7FE           01067     bra     $-2
                      01068     
0002AC 6EAD           01069     movwf   UxTXREG           ; Start sending
                      01070 
0002AE 0012           01071     return
                      01072 ; *****************************************************************************
                      01073 
                      01074 
                      01075 
                      01076 
                      01077 ; *****************************************************************************
0002B0                01078 ReadHostByte:
0002B0 B2AB           01079     btfsc   UxRCSTA, OERR       ; Reset on overun
0002B2 00FF           01080     reset
                      01081 
0002B4                01082 WaitForHostByte:
0002B4 0004           01083     clrwdt
0002B6 AA9E           01084     btfss   UxPIR, UxRCIF       ; Wait for data from RS232
0002B8 D7FD           01085     bra     WaitForHostByte
                      01086 
0002BA 50AE           01087     movf    UxRCREG, W          ; Save the data
0002BC 6E02           01088     movwf   RXDATA
                      01089  
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002BE 0012           01090     return
                      01091 ; *****************************************************************************
                      01092 
0002C0 00FF           01093     reset                       ; this code -should- never be executed, but 
0002C2 00FF           01094     reset                       ; just in case of errant execution or buggy
0002C4 00FF           01095     reset                       ; firmware, these instructions may protect
0002C6 6AA6           01096     clrf    EECON1              ; against accidental erase/write operations.
                      01097 
                      01098 ; *****************************************************************************
                      01099 ; Unlock and start the write or erase sequence.
0002C8                01100 TableWriteWREG:
0002C8 6EF5           01101     movwf   TABLAT
0002CA 000C           01102     tblwt   *
                      01103 
0002CC                01104 StartWrite:
0002CC 0004           01105     clrwdt
                      01106 
0002CE 0E55           01107     movlw   0x55            ; Unlock
0002D0 6EA7           01108     movwf   EECON2
0002D2 0EAA           01109     movlw   0xAA
0002D4 6EA7           01110     movwf   EECON2
0002D6 82A6           01111     bsf     EECON1, WR      ; Start the write
0002D8 0000           01112     nop
                      01113 
0002DA 0012           01114     return
                      01115 ; *****************************************************************************
                      01116 
                      01117     END
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADDEN1                            00000003
ADDEN2                            00000003
ADDRESS_H                         00000007
ADDRESS_L                         00000006
ADDRESS_U                         00000008
ADDRESS_X                         00000009
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000005
AN11                              00000006
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
AN8                               00000003
AN9                               00000004
AddCrc                            00000104
AppHighIntVector                  0x808
AppLowIntVector                   0x818
AppVector                         0x800
AppendDataBuffer                  0000008E
BANKED                            00000001
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BOOTBLOCKSIZE                     (BOOTLOADERSIZE / ERASE_FLASH_BLOCKSIZE + 1) * ERASE_FLASH_BLOCKSIZE
BOOTLOADERSIZE                    .708
BOOTLOADER_ADDRESS                0
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

BOR                               00000000
BRGH                              00000002
BRGH1                             00000002
BRGH2                             00000002
BSR                               00000FE0
BootInfoBlock                     00000126
BootInfoBlockEnd                  00000130
BootloadMode                      0000002E
BootloaderBreakCheck              0000000C
BootloaderInfo                    00000130
BootloaderStart                   00000000
C                                 00000000
C1INV                             00000004
C1OUT_CMCON                       00000006
C1OUT_PORTF                       00000002
C2INV                             00000005
C2OUT_CMCON                       00000007
C2OUT_PORTF                       00000001
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2A                             00000003
CCP2C                             00000007
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_PORTC                        00000001
CCP2_PORTE                        00000007
CCP3                              00000000
CCP3CON                           00000FB7
CCP3IE                            00000000
CCP3IF                            00000000
CCP3IP                            00000000
CCP3M0                            00000000
CCP3M1                            00000001
CCP3M2                            00000002
CCP3M3                            00000003
CCP4                              00000003
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

CCP4CON                           00000F73
CCP4IE                            00000001
CCP4IF                            00000001
CCP4IP                            00000001
CCP4M0                            00000000
CCP4M1                            00000001
CCP4M2                            00000002
CCP4M3                            00000003
CCP5                              00000004
CCP5CON                           00000F70
CCP5IE                            00000002
CCP5IF                            00000002
CCP5IP                            00000002
CCP5M0                            00000000
CCP5M1                            00000001
CCP5M2                            00000002
CCP5M3                            00000003
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CCPR3                             00000FB8
CCPR3H                            00000FB9
CCPR3L                            00000FB8
CCPR4                             00000F74
CCPR4H                            00000F75
CCPR4L                            00000F74
CCPR5                             00000F71
CCPR5H                            00000F72
CCPR5L                            00000F71
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CK2                               00000001
CKE                               00000006
CKP                               00000004
CLKO                              00000006
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
COMMAND                           00000005
CRCH                              00000001
CRCL                              00000000
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

CREN                              00000004
CREN1                             00000004
CREN2                             00000004
CS                                00000002
CSRC                              00000007
CSRC1                             00000007
CSRC2                             00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF_CVRCON                      00000004
CVREF_PORTF                       00000005
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
CheckAppVector                    00000010
CheckAppVector2                   0000001C
CheckCommand                      000000D4
D                                 00000005
DATA_ADDRESS                      00000005
DATA_COUNTH                       0000000B
DATA_COUNTL                       0000000A
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DC3B0                             00000004
DC3B1                             00000005
DC4B0                             00000004
DC4B1                             00000005
DC5B0                             00000004
DC5B1                             00000005
DCCP1X                            00000005
DCCP1Y                            00000004
DCCP2X                            00000005
DCCP2Y                            00000004
DCCP3X                            00000005
DCCP3Y                            00000004
DCCP4X                            00000005
DCCP4Y                            00000004
DCCP5X                            00000005
DCCP5Y                            00000004
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DDRF                              00000F97
DDRG                              00000F98
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

DEVICEID                          .51
DLE                               0x05
DONE                              00000001
DT2                               00000002
D_A                               00000005
D_NOT_A                           00000005
DigitalInput                      
DoAutoBaud                        00000046
EEADR                             00000FA9
EEADRH                            00000FAA
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEFS                              00000006
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
END_FLASH                         0x10000
END_GPR                           0xF00
ERASE_ADDRESS_MASK                (~(ERASE_FLASH_BLOCKSIZE-1))
ERASE_FLASH_BLOCKSIZE             .64
ETX                               0x04
EraseAddressOkay                  000001C4
EraseEndFlashAddressOkay          0000019C
EraseFlash                        00000186
FAST                              00000001
FERR                              00000002
FERR1                             00000002
FERR2                             00000002
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GODONE                            00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
GotoAppVector                     00000024
HighPriorityInterruptVector       00000008
I2C_DAT                           00000005
I2C_READ                          00000002
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INT3                              00000003
INT3E                             00000005
INT3F                             00000002
INT3IE                            00000005
INT3IF                            00000002
INT3IP                            00000001
INT3P                             00000001
INTCON                            00000FF2
INTCON1                           00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTEDG3                           00000003
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IPR3                              00000FA5
IRVST                             00000005
JUMPTABLE_BEGIN                   000000DA
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATA0                             00000000
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LATE3                             00000003
LATE4                             00000004
LATE5                             00000005
LATE6                             00000006
LATE7                             00000007
LATF                              00000F8E
LATF0                             00000000
LATF1                             00000001
LATF2                             00000002
LATF3                             00000003
LATF4                             00000004
LATF5                             00000005
LATF6                             00000006
LATF7                             00000007
LATG                              00000F8F
LATG0                             00000000
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

LATG1                             00000001
LATG2                             00000002
LATG3                             00000003
LATG4                             00000004
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
LoadHoldingRegisters              00000224
LowPriorityInterruptVector        00000018
MAJOR_VERSION                     .1
MINOR_VERSION                     .5
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_IPEN                          00000007
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_RI                            00000004
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NTX                               0xFF
NextEraseBlock                    000001CA
NoETX                             00000086
NoSTX                             00000080
OBF                               00000006
OERR                              00000001
OERR1                             00000001
OERR2                             00000001
OSC2                              00000006
OSCCON                            00000FD3
OV                                00000003
P                                 00000004
PACKET_DATA                       0000000B
PC                                00000FF9
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIE3                              00000FA3
PIR1                              00000F9E
PIR2                              00000FA1
PIR3                              00000FA4
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
PORTF                             00000F85
PORTG                             00000F86
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PR4                               00000F77
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

PSP7                              00000007
PSPCON                            00000FB0
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC1IE                             00000005
RC1IF                             00000005
RC1IP                             00000005
RC2                               00000002
RC2IE                             00000005
RC2IF                             00000005
RC2IP                             00000005
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCREG1                            00000FAE
RCREG2                            00000F6E
RCSTA                             00000FAB
RCSTA1                            00000FAB
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

RCSTA2                            00000F6B
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
RE4                               00000004
RE5                               00000005
RE6                               00000006
RE7                               00000007
READ_WRITE                        00000002
RF0                               00000000
RF1                               00000001
RF2                               00000002
RF3                               00000003
RF4                               00000004
RF5                               00000005
RF6                               00000006
RF7                               00000007
RG0                               00000000
RG1                               00000001
RG2                               00000002
RG3                               00000003
RG4                               00000004
RI                                00000004
RSEN                              00000001
RX                                00000007
RX2                               00000002
RX9                               00000006
RX91                              00000006
RX92                              00000006
RX9D                              00000000
RX9D1                             00000000
RX9D2                             00000000
RXDATA                            00000002
RXPIN                             7
RXPORT                            PORTC
R_NOT_W                           00000002
R_W                               00000002
ReadEeprom                        0000023C
ReadEepromLoop                    0000023E
ReadFlash                         00000142
ReadHostByte                      000002B0
ReceiveDataLoop                   0000007A
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

RetryAutoBaud                     0000004C
S                                 00000003
SCK                               00000003
SCL                               00000003
SCS                               00000000
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB1                            00000003
SENDB2                            00000003
SMP                               00000007
SOFTWP                            
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRG1                            00000FAF
SPBRG2                            00000F6F
SPEN                              00000007
SPEN1                             00000007
SPEN2                             00000007
SREN                              00000005
SREN1                             00000005
SREN2                             00000005
SS                                00000007
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
STX                               0x0F
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
SYNC1                             00000004
SYNC2                             00000004
SendAcknowledge                   00000278
SendChecksum                      00000280
SendETX                           00000288
SendEscapeByte                    0000028E
SendHostByte                      000002A6
StartOfLine                       00000072
StartWrite                        000002CC
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1INSYNC                          00000002
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3INSYNC                          00000002
T3NSYNC                           00000002
T3SYNC                            00000002
T4CKPS0                           00000000
T4CKPS1                           00000001
T4CON                             00000F76
T4OUTPS0                          00000003
T4OUTPS1                          00000004
T4OUTPS2                          00000005
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

T4OUTPS3                          00000006
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TMR4                              00000F78
TMR4IE                            00000003
TMR4IF                            00000003
TMR4IP                            00000003
TMR4ON                            00000002
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISB                             00000F93
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE 

TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRISE3                            00000003
TRISE4                            00000004
TRISE5                            00000005
TRISE6                            00000006
TRISE7                            00000007
TRISF                             00000F97
TRISF0                            00000000
TRISF1                            00000001
TRISF2                            00000002
TRISF3                            00000003
TRISF4                            00000004
TRISF5                            00000005
TRISF6                            00000006
TRISF7                            00000007
TRISG                             00000F98
TRISG0                            00000000
TRISG1                            00000001
TRISG2                            00000002
TRISG3                            00000003
TRISG4                            00000004
TRMT                              00000001
TRMT1                             00000001
TRMT2                             00000001
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 85


SYMBOL TABLE
  LABEL                             VALUE 

TX                                00000006
TX1IE                             00000004
TX1IF                             00000004
TX1IP                             00000004
TX2                               00000001
TX2IE                             00000004
TX2IF                             00000004
TX2IP                             00000004
TX8_9                             00000006
TX9                               00000006
TX91                              00000006
TX92                              00000006
TX9D                              00000000
TX9D1                             00000000
TX9D2                             00000000
TXD8                              00000000
TXDATA                            00000003
TXEN                              00000005
TXEN1                             00000005
TXEN2                             00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXREG1                            00000FAD
TXREG2                            00000F6D
TXSTA                             00000FAC
TXSTA1                            00000FAC
TXSTA2                            00000F6C
TableWriteWREG                    000002C8
UA                                00000001
UARTNUM                           1
USE_AUTOBAUD                      
USE_MAX_INTOSC                    
USE_SOFTBOOTWP                    
USE_SOFTCONFIGWP                  
UxBAUDCON                         BAUDCON
UxPIR                             PIR1
UxRCIF                            RCIF
UxRCREG                           RCREG
UxRCSTA                           RCSTA
UxSPBRG                           SPBRG
UxSPBRGH                          SPBRGH
UxTXIF                            TXIF
UxTXREG                           TXREG
UxTXSTA                           TXSTA
VCFG0                             00000004
VCFG1                             00000005
VREFM                             00000002
VREFP                             00000003
VerifyFlash                       00000158
VerifyPacketCRC                   00000094
VerifyPacketCrcLoop               000000A0
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 86


SYMBOL TABLE
  LABEL                             VALUE 

W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WRITE_ADDRESS_MASK                (~(WRITE_FLASH_BLOCKSIZE-1))
WRITE_FLASH_BLOCKSIZE             .8
WaitForHostByte                   000002B4
WaitForHostCommand                0000006C
WaitForRise                       000000F4
WaitForRiseLoop                   000000F6
WrDLE                             000002A0
WrNext                            000002A4
WriteAddressOkay                  00000220
WriteConfig                       00000278
WriteEeprom                       00000258
WriteEepromLoop                   0000025C
WriteEndFlashAddressOkay          000001F8
WriteFlash                        000001E2
WtSR                              000000FE
Z                                 00000002
_BORV_20                          000000FF
_BORV_20_2L                       000000FF
_BORV_27_2L                       000000FB
_BORV_42_2L                       000000F7
_BORV_45_2L                       000000F3
_BOR_OFF_2L                       000000FD
_BOR_ON_2L                        000000FF
_CCP2MX_OFF                       000000FE
_CCP2MX_OFF_3H                    000000FE
_CCP2MX_ON                        000000FF
_CCP2MX_ON_3H                     000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG3L                         00300004
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 87


SYMBOL TABLE
  LABEL                             VALUE 

_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_ECIO_OSC                         000000FD
_ECIO_OSC_1H                      000000FD
_EC_OSC                           000000FC
_EC_OSC_1H                        000000FC
_HSPLL_OSC                        000000FE
_HSPLL_OSC_1H                     000000FE
_HS_OSC                           000000FA
_HS_OSC_1H                        000000FA
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_LP_OSC                           000000F8
_LP_OSC_1H                        000000F8
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_OSCS_OFF_1H                      000000FF
_OSCS_ON_1H                       000000DF
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_RCIO_OSC                         000000FF
_RCIO_OSC_1H                      000000FF
_RC_OSC                           000000FB
_RC_OSC_1H                        000000FB
_STVR_OFF_4L                      000000FE
_STVR_ON_4L                       000000FF
_WDTPS_128_2H                     000000FF
_WDTPS_16_2H                      000000F9
_WDTPS_1_2H                       000000F1
_WDTPS_2_2H                       000000F3
MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 88


SYMBOL TABLE
  LABEL                             VALUE 

_WDTPS_32_2H                      000000FB
_WDTPS_4_2H                       000000F5
_WDTPS_64_2H                      000000FD
_WDTPS_8_2H                       000000F7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XT_OSC                           000000F9
_XT_OSC_1H                        000000F9
__18F6620                         00000001
pmwtpi                            


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXX----XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXX---- ---------------- ----------------
0000 : -XXXXXX-XXXXXX-- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:   740
Program Memory Bytes Free: 64796


MPASM  5.48              PIC18 BOOTLOADER.ASM   2-27-2015  8:51:01         PAGE 89





Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     4 suppressed

